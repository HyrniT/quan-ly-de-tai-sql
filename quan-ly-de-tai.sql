-------------------------------------------------------BUỔI 2------------------------------------------------------------

CREATE DATABASE QLGV_20120077

USE [QLGV_20120077]

--Tạo bảng GIAOVIEN
CREATE TABLE GIAOVIEN
( 
	 MAGV char(3), 
	 HOTEN nvarchar(40), 
	 LUONG float, 
	 PHAI nchar(3), 
	 NGSINH date, 
	 DIACHI nvarchar(200),
	 GVQLCM char(3), 
	 MABM nchar(4)
	 --PRIMARY KEY (MAGV)
)

--Tạo bảng GV_DT
CREATE TABLE GV_DT
(
	MAGV char(3),
	DIENTHOAI char(10),
	--PRIMARY KEY (MAGV, DIENTHOAI),
	--FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV) 
)

--Tạo bảng NGUOITHAN
CREATE TABLE NGUOITHAN
(
	MAGV char(3),
	TEN nvarchar(10),
	NGSINH date,
	PHAI nchar(3),
	--PRIMARY KEY (MAGV, TEN),
	--FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV)
)

--Tạo bảng KHOA
CREATE TABLE KHOA
(
	MAKHOA char(4),
	TENKHOA nvarchar(20),
	NAMTL int,
	PHONG char(3),
	DIENTHOAI char(10),
	TRUONGKHOA char(3),
	NGAYNHANCHUC date,
	--PRIMARY KEY (MAKHOA),
	--FOREIGN KEY (TRUONGKHOA) REFERENCES GIAOVIEN(MAGV) 
)

--Tạo bảng BOMON
CREATE TABLE BOMON
(
	MABM nchar(4),
	TENBM nvarchar(20),
	PHONG char(3),
	DIENTHOAI char(10),
	TRUONGBM char(3),
	MAKHOA char(4),
	NGAYNHANCHUC date,
	--PRIMARY KEY (MABM),
	--FOREIGN KEY (TRUONGBM) REFERENCES GIAOVIEN(MAGV),
	--FOREIGN KEY (MAKHOA) REFERENCES KHOA(MAKHOA) 
)

--Tạo bảng CHUDE
CREATE TABLE CHUDE
(
	MACD char(4),
	TENCD nvarchar(40),
	--PRIMARY KEY (MACD)
)

--Tạo bảng DETAI
CREATE TABLE DETAI
(
	MADT char(3),
	TENDT nvarchar(40),
	CAPQL nvarchar(10),
	KINHPHI float,
	NGAYBD date,
	NGAYKT date,
	MACD char(4),
	GVCNDT char(3),
	--PRIMARY KEY (MADT),
	--FOREIGN KEY (MACD) REFERENCES CHUDE(MACD) 
)

CREATE TABLE CONGVIEC
(
	MADT char(3),
	SOTT int,
	TENCV nvarchar(40),
	NGAYBD date,
	NGAYKT date,
	--PRIMARY KEY (MADT, SOTT),
	--FOREIGN KEY (MADT) REFERENCES DETAI(MADT) 
)

ALTER TABLE CONGVIEC
ADD CONSTRAINT U_MADT
UNIQUE (MADT)

CREATE TABLE THAMGIADT
(
	MAGV char(3),
	MADT char(3),
	STT int,
	PHUCAP float,
	KETQUA nchar(3),
	--PRIMARY KEY (MAGV, MADT, STT),
	--FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV), 
	--FOREIGN KEY (STT, MADT) REFERENCES CONGVIEC(SOTT, MADT)     
)



-------------------------------------------------Tạo khóa chính--------------------------------------------------

ALTER TABLE GIAOVIEN ADD CONSTRAINT PK_GIAOVIEN PRIMARY KEY (MAGV)

ALTER TABLE GV_DT ADD CONSTRAINT PK_GV_DT PRIMARY KEY (MAGV, DIENTHOAI)

ALTER TABLE NGUOITHAN ADD CONSTRAINT PK_NGUOITHAN PRIMARY KEY (MAGV, TEN)

ALTER TABLE KHOA ADD CONSTRAINT PK_KHOA PRIMARY KEY (MAKHOA)

ALTER TABLE BOMON ADD CONSTRAINT PK_BOMON PRIMARY KEY (MABM)

ALTER TABLE CHUDE ADD CONSTRAINT PK_CHUDE PRIMARY KEY (MACD)

ALTER TABLE DETAI ADD CONSTRAINT PK_DETAI PRIMARY KEY (MADT)

ALTER TABLE CONGVIEC ADD CONSTRAINT PK_CONGVIEC PRIMARY KEY (MADT, SOTT)

ALTER TABLE THAMGIADT ADD CONSTRAINT PK_THAMGIADT PRIMARY KEY (MAGV, MADT, STT)



-------------------------------------------------Tạo khóa ngoại-----------------------------------------------------

--GVQLCM(GIAOVIEN) -> MAGV(GIAOVIEN)
ALTER TABLE GIAOVIEN 
ADD CONSTRAINT FK_GIAOVIEN_GIAOVIEN
FOREIGN KEY (GVQLCM) REFERENCES GIAOVIEN(MAGV)

--MABM(GIAOVIEN) -> MABM(BOMON)
ALTER TABLE GIAOVIEN 
ADD CONSTRAINT FK_GIAOVIEN_BOMON
FOREIGN KEY (MABM) REFERENCES BOMON(MABM)

--TRUONGBM(BOMON) -> MAGV(GIAOVIEN)
ALTER TABLE BOMON
ADD CONSTRAINT FK_BOMON_GIAOVIEN
FOREIGN KEY (TRUONGBM) REFERENCES GIAOVIEN(MAGV)

--MAGV(GV_DT) -> MAGV(GIAOVIEN)
ALTER TABLE GV_DT
ADD CONSTRAINT FK_GV_DT_GIAOVIEN
FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV)

--MAGV(NGUOITHAN) -> MAGV(GIAOVIEN)
ALTER TABLE NGUOITHAN
ADD CONSTRAINT FK_NGUOITHAN_GIAOVIEN
FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV)

--TRUONGKHOA(KHOA) -> MAGV(GIAOVIEN)
ALTER TABLE KHOA
ADD CONSTRAINT FK_KHOA_GIAOVIEN
FOREIGN KEY (TRUONGKHOA) REFERENCES GIAOVIEN(MAGV)

--MAKHOA(BOMON) -> MAKHOA(KHOA)
ALTER TABLE BOMON
ADD CONSTRAINT FK_BOMON_KHOA
FOREIGN KEY (MAKHOA) REFERENCES KHOA(MAKHOA)

--MACD(DETAI) -> MACD(CHUDE)
ALTER TABLE DETAI
ADD CONSTRAINT FK_DETAI_CHUDE
FOREIGN KEY (MACD) REFERENCES CHUDE(MACD)

--GVCNDT(DETAI) -> MAGV(GIAOVIEN)
ALTER TABLE DETAI
ADD CONSTRAINT FK_DETAI_GIAOVIEN
FOREIGN KEY (GVCNDT) REFERENCES GIAOVIEN(MAGV)

--MADT(CONGVIEC) -> MADT(DETAI)
ALTER TABLE CONGVIEC
ADD CONSTRAINT FK_CONGVIEC_DETAI
FOREIGN KEY (MADT) REFERENCES DETAI(MADT) 

--MADT,STT(THAMGIADT) -> MADT,SOTT(CONGVIEC)
ALTER TABLE THAMGIADT
ADD CONSTRAINT FK_THAMGIADT_CONGVIEC
FOREIGN KEY (MADT, STT) REFERENCES CONGVIEC(MADT, SOTT)   

--MAGV(THAMGIADT) -> MAGV(GIAOVIEN)
ALTER TABLE THAMGIADT
ADD CONSTRAINT FK_THAMGIADT_GIAOVIEN
FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV)

---------------------------------------------Tạo ràng buộc miền giá trị-----------------------------------------------

ALTER TABLE BOMON  WITH CHECK ADD  CONSTRAINT CK_BOMON_NGAYNHANCHUC CHECK  ((NGAYNHANCHUC<getdate()))
ALTER TABLE BOMON CHECK CONSTRAINT CK_BOMON_NGAYNHANCHUC

ALTER TABLE DETAI  WITH CHECK ADD  CONSTRAINT CK_DETAI_KINHPHI CHECK  ((KINHPHI>=(0)))
ALTER TABLE DETAI CHECK CONSTRAINT CK_DETAI_KINHPHI

ALTER TABLE DETAI  WITH CHECK ADD  CONSTRAINT CK_DETAI_NGAYBD_NGAYKT CHECK  ((NGAYBD<NGAYKT AND NGAYKT<getdate()))
ALTER TABLE DETAI CHECK CONSTRAINT CK_DETAI_NGAYBD_NGAYKT

ALTER TABLE GIAOVIEN  WITH CHECK ADD  CONSTRAINT CK_GIAOVIEN_LUONG CHECK  ((LUONG>=(0)))
ALTER TABLE GIAOVIEN CHECK CONSTRAINT CK_GIAOVIEN_LUONG

ALTER TABLE GIAOVIEN  WITH CHECK ADD  CONSTRAINT CK_GIAOVIEN_NGSINH CHECK  ((NGSINH<getdate()))
ALTER TABLE GIAOVIEN CHECK CONSTRAINT CK_GIAOVIEN_NGSINH

ALTER TABLE GIAOVIEN  WITH CHECK ADD  CONSTRAINT CK_GIAOVIEN_PHAI CHECK  ((PHAI='Nam' OR PHAI=N'Nữ'))
ALTER TABLE GIAOVIEN CHECK CONSTRAINT CK_GIAOVIEN_PHAI

ALTER TABLE KHOA  WITH CHECK ADD  CONSTRAINT CK_KHOA_NAMTL CHECK  ((NAMTL<=datepart(year,getdate())))
ALTER TABLE KHOA CHECK CONSTRAINT CK_KHOA_NAMTL

ALTER TABLE KHOA  WITH CHECK ADD  CONSTRAINT CK_KHOA_NGAYNHANCHUC CHECK  ((NGAYNHANCHUC<getdate()))
ALTER TABLE KHOA CHECK CONSTRAINT CK_KHOA_NGAYNHANCHUC

ALTER TABLE NGUOITHAN  WITH CHECK ADD  CONSTRAINT CK_NGUOITHAN_NGSINH CHECK  ((NGSINH<getdate()))
ALTER TABLE NGUOITHAN CHECK CONSTRAINT CK_NGUOITHAN_NGSINH

ALTER TABLE NGUOITHAN  WITH CHECK ADD  CONSTRAINT CK_NGUOITHAN_PHAI CHECK  ((PHAI='Nam' OR PHAI=N'Nữ'))
ALTER TABLE NGUOITHAN CHECK CONSTRAINT CK_NGUOITHAN_PHAI

ALTER TABLE THAMGIADT  WITH CHECK ADD  CONSTRAINT CK_THAMGIADT_KETQUA CHECK  ((KETQUA=N'Đạt' OR KETQUA=NULL))
ALTER TABLE THAMGIADT CHECK CONSTRAINT CK_THAMGIADT_KETQUA

ALTER TABLE THAMGIADT  WITH CHECK ADD  CONSTRAINT CK_THAMGIADT_PHUCAP CHECK  ((PHUCAP>=(0)))
ALTER TABLE THAMGIADT CHECK CONSTRAINT CK_THAMGIADT_PHUCAP

--------------------------------------------------Nhập dữ liệu------------------------------------------------

--Bảng GIAOVIEN (chừa lại MABM)
/*
INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'001', N'Nguyễn Hoài An', 2000, N'Nam','2/15/1973',  N'25/3 Lạc Long Quân, Q.10, TP HCM', NULL, N'MMT ')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES ('002', N'Trần Trà Hương', 2500, N'Nữ ', '6/20/1960', N'125 Trần Hưng Đạo, Q.1, TP HCM', NULL, N'HTTT')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES ('003', N'Nguyễn Ngọc Ánh', 2200, N'Nữ ', '6/20/1959', N'12/51 Võ Văn Ngân Thủ Đức, TP HCM', '002', N'HTTT')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES ('004', N'Trương Nam Sơn', 2300, N'Nam', '6/5/1976', N'215 Lý Thường Kiệt, TB Biên Hòa', NULL, N'VS  ')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'005', N'Lý Hoàng Hà', 2500, N'Nam', '10/23/1954', N'22/5 Nguyễn Xí, Q.Bình Thạnh, TP HCM', NULL, N'VLĐT')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'006', N'Trần Bạch Tuyết', 1500, N'Nữ ', '5/20/1980', N'127 Hùng Vương, TP Mỹ Tho', '004', N'VS  ')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'007', N'Nguyễn An Trung', 2100, N'Nam', '6/5/1976', N'234 3/2, TP Biên Hòa', NULL, N'HPT ')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'008', N'Trần Trung Hiếu', 1800, N'Nam', '8/6/1977', N'22/11 Lý Thường Kiệt, TP Mỹ Tho', '007', N'HPT ')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'009', N'Trần Hoàng Nam', 2000, N'Nam', '11/22/1975', N'234 Trần Não, An Phú, TP HCM', '001', N'MMT ')

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'010', N'Phạm Nam Thanh', 1500, N'Nam', '12/12/1980', N'221 Hùng Vương, Q.5, TP HCM', '007', N'HPT ')
*/
INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'001', N'Nguyễn Hoài An', 2000, N'Nam','2/15/1973',  N'25/3 Lạc Long Quân, Q.10, TP HCM', NULL, NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES ('002', N'Trần Trà Hương', 2500, N'Nữ ', '6/20/1960', N'125 Trần Hưng Đạo, Q.1, TP HCM', NULL, NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES ('003', N'Nguyễn Ngọc Ánh', 2200, N'Nữ ', '6/20/1959', N'12/51 Võ Văn Ngân Thủ Đức, TP HCM', '002', NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES ('004', N'Trương Nam Sơn', 2300, N'Nam', '6/5/1976', N'215 Lý Thường Kiệt, TB Biên Hòa', NULL, NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'005', N'Lý Hoàng Hà', 2500, N'Nam', '10/23/1954', N'22/5 Nguyễn Xí, Q.Bình Thạnh, TP HCM', NULL, NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'006', N'Trần Bạch Tuyết', 1500, N'Nữ ', '5/20/1980', N'127 Hùng Vương, TP Mỹ Tho', '004', NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'007', N'Nguyễn An Trung', 2100, N'Nam', '6/5/1976', N'234 3/2, TP Biên Hòa', NULL, NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'008', N'Trần Trung Hiếu', 1800, N'Nam', '8/6/1977', N'22/11 Lý Thường Kiệt, TP Mỹ Tho', '007', NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'009', N'Trần Hoàng Nam', 2000, N'Nam', '11/22/1975', N'234 Trần Não, An Phú, TP HCM', '001', NULL)

INSERT GIAOVIEN ([MAGV], [HOTEN], [LUONG], [PHAI], [NGSINH], [DIACHI], [GVQLCM], [MABM]) 
VALUES (N'010', N'Phạm Nam Thanh', 1500, N'Nam', '12/12/1980', N'221 Hùng Vương, Q.5, TP HCM', '007', NULL)



--Bảng KHOA
INSERT KHOA ([MAKHOA], [TENKHOA], [NAMTL], [PHONG], [DIENTHOAI], [TRUONGKHOA], [NGAYNHANCHUC]) 
VALUES ('CNTT', N'Công nghệ thông tin', 1995, 'B11', '0838123456', '002', '2/20/2005')

INSERT KHOA ([MAKHOA], [TENKHOA], [NAMTL], [PHONG], [DIENTHOAI], [TRUONGKHOA], [NGAYNHANCHUC]) 
VALUES ('HH  ', N'Hóa học', 1980, 'B41', '0838456456', '007', '10/15/2001')

INSERT KHOA ([MAKHOA], [TENKHOA], [NAMTL], [PHONG], [DIENTHOAI], [TRUONGKHOA], [NGAYNHANCHUC]) 
VALUES ('SH  ', N'Sinh học', 1980, 'B31', '0838454545', '004', '10/21/2000')

INSERT KHOA ([MAKHOA], [TENKHOA], [NAMTL], [PHONG], [DIENTHOAI], [TRUONGKHOA], [NGAYNHANCHUC]) 
VALUES ('VL  ', N'Vật lý', 1976, 'B21', '0838223223', '005', '9/18/2003')




--Bảng BOMON
INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'CNTT', N'Công nghệ tri thức', 'B15', '0838126126', NULL, 'CNTT', NULL)

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'HHC ', N'Hóa hữu cơ', 'B44', '0838222222', NULL, 'HH  ', NULL)

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'HL  ', N'Hóa lý', 'B42', '0838878787', NULL, 'HH  ', NULL)

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'HPT ', N'Hóa phân tích', 'B43', '0838777777', '007', 'HH  ', '10/15/2007')

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'HTTT', N'Hệ thống thông tin', 'B13', '0838125125', '002', 'CNTT', '9/20/2004')

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'MMT ', N'Mạng máy tính', 'B16', '0838676767', '001', 'CNTT', '5/15/2005')

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'SH  ', N'Sinh hóa', 'B33', '0838989898', NULL, 'SH  ', NULL)

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'VLĐT', N'Vật lý điện tử', 'B23', '0838234234', NULL, 'VL  ', NULL)

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'VLUD', N'Vật lý ứng dụng', 'B24', '0838454545', '005', 'VL  ', '2/18/2006')

INSERT BOMON ([MABM], [TENBM], [PHONG], [DIENTHOAI], [TRUONGBM], [MAKHOA], [NGAYNHANCHUC]) 
VALUES (N'VS  ', N'Vi sinh', N'B32', '0838909090', '004', 'SH  ', '1/1/2007')



--Bảng GIAOVIEN (cập nhật MABM sau khi nhập xong bảng BOMON)
UPDATE GIAOVIEN SET MABM = 'MMT ' WHERE MAGV = '001';
UPDATE GIAOVIEN SET MABM = 'HTTT' WHERE MAGV = '002';
UPDATE GIAOVIEN SET MABM = 'HTTT' WHERE MAGV = '003';
UPDATE GIAOVIEN SET MABM = 'VS  ' WHERE MAGV = '004';
UPDATE GIAOVIEN SET MABM = 'VLĐT' WHERE MAGV = '005';
UPDATE GIAOVIEN SET MABM = 'VS  ' WHERE MAGV = '006';
UPDATE GIAOVIEN SET MABM = 'HPT ' WHERE MAGV = '007';
UPDATE GIAOVIEN SET MABM = 'HPT ' WHERE MAGV = '008';
UPDATE GIAOVIEN SET MABM = 'MMT ' WHERE MAGV = '009';
UPDATE GIAOVIEN SET MABM = 'HPT ' WHERE MAGV = '010';



--Bảng NGUOITHAN
INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES ('001', N'Hùng ', '1/14/1990', N'Nam')

INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES ('001', N'Thủy', '12/08/1994', N'Nữ ')

INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES ('003', N'Hà', '9/3/1998', N'Nữ ')

INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES ('003', N'Thu', '9/9/1998', N'Nữ ')

INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES ('007', N'Mai', '3/26/2003', N'Nữ ')

INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES ('007', N'Vy', '2/14/2000', N'Nữ ')

INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES ('008', N'Nam', '5/6/1991', N'Nam')

INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES ('009', N'An', '8/19/1996', N'Nam')

INSERT NGUOITHAN ([MAGV], [TEN], [NGSINH], [PHAI]) 
VALUES (N'010', N'Nguyệt', '1/14/2006', N'Nữ ')



--Bảng GV_DT
INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('001', '0838912112')

INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('001', '0903123123')

INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('002', '0913454545')

INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('003', '0838121212')

INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('003', '0903656565')

INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('003', '0937125125')

INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('006', '0937888888')

INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('008', '0653717171')

INSERT GV_DT ([MAGV], [DIENTHOAI]) VALUES ('008', '0913232323')



--Bảng CHUDE
INSERT CHUDE ([MACD], [TENCD]) 
VALUES ('NCPT', N'Nghiên cứu phát triển')

INSERT CHUDE ([MACD], [TENCD]) 
VALUES ('QLGD', N'Quản lý giáo dục')

INSERT CHUDE ([MACD], [TENCD]) 
VALUES ('UDCN', N'Ứng dụng công nghệ')



--Bảng DETAI
INSERT DETAI ([MADT], [TENDT], [CAPQL], [KINHPHI], [NGAYBD], [NGAYKT], [MACD], [GVCNDT]) 
VALUES ('001', N'HTTT quản lý các trường ĐH', N'ĐHQG', 20, '10/20/2007', '10/20/2008', 'QLGD', '002')

INSERT DETAI ([MADT], [TENDT], [CAPQL], [KINHPHI], [NGAYBD], [NGAYKT], [MACD], [GVCNDT]) 
VALUES ('002', N'HTTT quản lý giáo vụ cho một khoa', N'Trường', 20, '10/12/2000', '10/12/2001', 'QLGD', '002')

INSERT DETAI ([MADT], [TENDT], [CAPQL], [KINHPHI], [NGAYBD], [NGAYKT], [MACD], [GVCNDT]) 
VALUES ('003', N'Nghiên cứu chế tạo sợi Nanô Platin', N'ĐHQG', 300, '5/15/2009', '5/15/2010', 'NCPT', '005')

INSERT DETAI ([MADT], [TENDT], [CAPQL], [KINHPHI], [NGAYBD], [NGAYKT], [MACD], [GVCNDT]) 
VALUES ('004', N'Tạo vật liệu sinh học bằng màng ối người', N'Nhà nước', 100, '11/1/2007', '12/31/2009', 'NCPT', '004')

INSERT DETAI ([MADT], [TENDT], [CAPQL], [KINHPHI], [NGAYBD], [NGAYKT], [MACD], [GVCNDT]) 
VALUES ('005', N'Ứng dụng hóa học xanh', N'Trường', 200, '10/10/2003', '12/10/2004', 'UDCN', '007')

INSERT DETAI ([MADT], [TENDT], [CAPQL], [KINHPHI], [NGAYBD], [NGAYKT], [MACD], [GVCNDT]) 
VALUES ('006', N'Nghiên cứu tế bào gốc', N'Nhà nước', 4000, '10/20/2006', '10/20/2009', 'NCPT', '004')

INSERT DETAI ([MADT], [TENDT], [CAPQL], [KINHPHI], [NGAYBD], [NGAYKT], [MACD], [GVCNDT]) 
VALUES ('007', N'HTTT quản lý thư viện ở các trường ĐH', N'Trường', 20, '5/10/2009', '5/10/2010', 'QLGD', '001')



--Bảng CONGVIEC
INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('001', 1, N'Khởi tạo và Lập kế hoạch', '10/20/2007', '12/20/2008')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('001', 2, N'Xác định yêu cầu', '12/21/2008', '3/21/2008')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('001', 3, N'Phân tích hệ thống', '12/21/2008', '3/21/2008')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('001', 4, N'Thiết kế hệ thống', '5/23/2008', '6/23/2008')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('001', 5, N'Cài đặt thử nghiệm', '6/24/2008', '10/20/2008')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('002', 1, N'Khởi tạo và Lập kế hoạch', '5/10/2009', '7/10/2009')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('002', 2, N'Xác định yêu cầu', '7/11/2009', '10/11/2009')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('002', 3, N'Phân tích hệ thống', '10/12/2009', '12/20/2009')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('002', 4, N'Thiết kế hệ thống', '12/21/2009', '3/22/2010')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('002', 5,  N'Cài đặt thử nghiệm', '3/23/2010', '5/10/2010')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('006', 1, N'Lấy mẫu', '10/20/2006', '2/20/2007')

INSERT CONGVIEC ([MADT], [SOTT], [TENCV], [NGAYBD], [NGAYKT]) 
VALUES ('006', 2, N'Nuôi cấy', '2/21/2007', '8/21/2008')



--Bảng THAMGIADT
INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('001', '002', 1, 0, NULL)

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('001', '002', 2, 2, NULL)

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('002', '001', 4, 2, N'Đạt')

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('003', '001', 1, 1, N'Đạt')

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('003', '001', 2, 0, N'Đạt')

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('003', '001', 4, 1, N'Đạt')

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('003', '002', 2, 0, NULL)

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('004', '006', 1, 0, N'Đạt')

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('004', '006', 2, 1, N'Đạt')

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('006', '006', 2, 1.5, N'Đạt')

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('009', '002', 3, 0.5, NULL)

INSERT THAMGIADT ([MAGV], [MADT], [STT], [PHUCAP], [KETQUA]) 
VALUES ('009', '002', 4, 1.5, NULL)



-------------------------------------------------------BUỔI 3------------------------------------------------------------

--Q1. Cho biết họ tên và mức lương của các giáo viên nữ.
SELECT HOTEN, LUONG
FROM GIAOVIEN
WHERE PHAI=N'Nữ'

--Q2. Cho biết họ tên của các giáo viên và lương của họ sau khi tăng 10%.
SELECT HOTEN, LUONG*1.1
FROM GIAOVIEN

--Q3. Cho biết mã của các giáo viên có họ tên bắt đầu là “Nguyễn” và lương trên $2000 hoặc, giáo viên là trưởng bộ môn nhận chức sau năm 1995.
SELECT MAGV
FROM GIAOVIEN
WHERE HOTEN LIKE N'Nguyễn%' AND LUONG>2000
UNION
SELECT GV.MAGV
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MAGV=BM.TRUONGBM
WHERE YEAR(BM.NGAYNHANCHUC)>1995;

--Q4. Cho biết tên những giáo viên khoa Công nghệ thông tin.
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN KHOA K ON BM.MAKHOA=K.MAKHOA
WHERE K.MAKHOA='CNTT'

--Q5. Cho biết thông tin của bộ môn cùng thông tin giảng viên làm trưởng bộ môn đó.
SELECT *
FROM BOMON BM LEFT JOIN GIAOVIEN GV ON BM.TRUONGBM=GV.MAGV

--Q6. Với mỗi giáo viên, hãy cho biết thông tin của bộ môn mà họ đang làm việc.
SELECT *
FROM GIAOVIEN GV LEFT JOIN BOMON BM ON GV.MABM=BM.MABM

--Q7. Cho biết tên đề tài và giáo viên chủ nhiệm đề tài.
SELECT DT.TENDT, GV.HOTEN
FROM DETAI AS DT, GIAOVIEN AS GV
WHERE DT.GVCNDT=GV.MAGV

SELECT TENDT, HOTEN
FROM DETAI, GIAOVIEN
WHERE DETAI.GVCNDT=GIAOVIEN.MAGV

--Q8. Với mỗi khoa cho biết thông tin trưởng khoa.
SELECT GV.*
FROM KHOA K LEFT JOIN GIAOVIEN GV ON K.TRUONGKHOA=GV.MAGV

--Q9. Cho biết các giáo viên của bộ môn “Vi sinh” có tham gia đề tài 006.
SELECT GV.*
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV
WHERE TGDT.MADT='006'AND GV.MABM=N'VS'

--Q10. Với những đề tài thuộc cấp quản lý “Thành phố”, cho biết mã đề tài, đề tài thuộc về chủ đề nào, họ tên người chủ nghiệm đề tài cùng với ngày sinh và địa chỉ của người ấy.
SELECT DT.MADT, CD.TENCD, GV.HOTEN, GV.NGSINH, GV.DIACHI
FROM DETAI DT LEFT JOIN CHUDE CD ON DT.MACD=CD.MACD JOIN GIAOVIEN GV ON DT.GVCNDT=GV.MAGV
WHERE DT.CAPQL=N'Trường'

--Q11. Tìm họ tên của từng giáo viên và người phụ trách chuyên môn trực tiếp của giáo viên đó.
SELECT GV.HOTEN AS GIAOVIEN, NQL.HOTEN AS NGUOIQUANLY
FROM GIAOVIEN AS GV LEFT JOIN GIAOVIEN AS NQL ON GV.GVQLCM=NQL.MAGV

--Q12. Tìm họ tên của những giáo viên được “Nguyễn Thanh Tùng” phụ trách trực tiếp.
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN GIAOVIEN NQL ON GV.GVQLCM=NQL.MAGV
WHERE NQL.HOTEN=N'Nguyễn Thanh Tùng'

--Q13. Cho biết tên giáo viên là trưởng bộ môn “Hệ thống thông tin”.
SELECT GV.HOTEN
FROM BOMON BM JOIN GIAOVIEN GV ON BM.TRUONGBM=GV.MAGV
WHERE BM.TENBM=N'Hệ thống thông tin'

--Q14. Cho biết tên người chủ nhiệm đề tài của những đề tài thuộc chủ đề Quản lý giáo dục.
SELECT GV.HOTEN
FROM DETAI DT JOIN GIAOVIEN GV ON DT.GVCNDT=GV.MAGV JOIN CHUDE CD ON DT.MACD=CD.MACD
WHERE CD.TENCD=N'Quản lý giáo dục'

--Q15. Cho biết tên các công việc của đề tài HTTT quản lý các trường ĐH có thời gian bắt đầu trong tháng 3/2008.
SELECT CV.TENCV
FROM CONGVIEC CV JOIN DETAI DT ON CV.MADT=DT.MADT
WHERE DT.TENDT LIKE N'HTTT%ĐH' AND (DT.NGAYBD BETWEEN '3/1/2008' AND '3/31/2008')

--Q16. Cho biết tên giáo viên và tên người quản lý chuyên môn của giáo viên đó.
SELECT GV.HOTEN AS GIAOVIEN, NQL.HOTEN AS NGUOIQUANLY
FROM GIAOVIEN AS GV LEFT JOIN GIAOVIEN AS NQL ON GV.GVQLCM=NQL.MAGV

--Q17. Cho biết các công việc bắt đầu trong khoảng từ 01/01/2007 đến 01/08/2007.
SELECT CV.TENCV
FROM CONGVIEC CV
WHERE CV.NGAYBD BETWEEN '1/1/2007' AND '8/1/2007'

--Q18. Cho biết họ tên các giáo viên cùng bộ môn với giáo viên “Trần Trà Hương”.
SELECT GV1.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN GIAOVIEN GV1 ON GV1.MABM=BM.MABM
WHERE GV.HOTEN=N'Trần Trà Hương' AND GV1.HOTEN!=N'Trần Trà Hương'

--Q19. Tìm những giáo viên vừa là trưởng bộ môn vừa chủ nhiệm đề tài.
SELECT GV.*
FROM GIAOVIEN GV JOIN BOMON BM ON BM.TRUONGBM=GV.MAGV
INTERSECT
SELECT GV.*
FROM GIAOVIEN GV JOIN DETAI DT ON DT.GVCNDT=GV.MAGV

--Q20. Cho biết tên những giáo viên vừa là trưởng khoa vừa là trưởng bộ môn
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN KHOA K ON K.TRUONGKHOA=GV.MAGV
INTERSECT
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON BM.TRUONGBM=GV.MAGV

--Q21. Cho biết tên những trưởng bộ môn mà vừa chủ nhiệm đề tài
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON BM.TRUONGBM=GV.MAGV
INTERSECT
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN DETAI DT ON DT.GVCNDT=GV.MAGV

--Q22. Cho biết mã số các trưởng khoa có chủ nhiệm đề tài
SELECT GV.MAGV
FROM GIAOVIEN GV JOIN KHOA K ON K.TRUONGKHOA=GV.MAGV
INTERSECT
SELECT GV.MAGV
FROM GIAOVIEN GV JOIN DETAI DT ON DT.GVCNDT=GV.MAGV

--Q23. Cho biết mã số các giáo viên thuộc bộ môn “HTTT” hoặc có tham gia đề tài mã “001”.
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE GV.MABM=N'HTTT'
UNION
SELECT GV.MAGV
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV
WHERE TGDT.MADT='001'

--Q24. Cho biết giáo viên làm việc cùng bộ môn với giáo viên 002.
SELECT GV1.*
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN GIAOVIEN GV1 ON GV1.MABM=BM.MABM
WHERE GV.MAGV='002' AND GV1.MAGV!='002'

--Q25. Tìm những giáo viên là trưởng bộ môn.
SELECT *
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.TRUONGBM

--Q26. Cho biết họ tên và mức lương của các giáo viên.
SELECT HOTEN, LUONG
FROM GIAOVIEN


-------------------------------------------------------BUỔI 4------------------------------------------------------------

-- Q27 : Cho biết số lượng giáo viên và tổng lương
SELECT COUNT(*) AS SLGV, SUM(LUONG) AS TONGLUONG
FROM GIAOVIEN

-- Q28 : Cho biết số lượng giáo viên và lương tb của từng môn
SELECT MABM, COUNT(*) AS SLGVBM, AVG(LUONG) AS LUONTB
FROM GIAOVIEN
GROUP BY MABM

-- Q29: Cho biết tên chủ đề và số lượng đề tài thuộc chủ đề
SELECT CHUDE.TENCD, COUNT(*) AS SOLUONGDT
FROM CHUDE, DETAI
WHERE CHUDE.MACD = DETAI.MACD
GROUP BY CHUDE.MACD, CHUDE.TENCD

-- Q30: Cho biết tên giáo viên và số lượng đề tài gv đó tham gia
SELECT gv.HOTEN, COUNT(distinct tg.MADT) as SLDT
FROM GIAOVIEN gv, THAMGIADT tg
WHERE gv.MAGV = tg.MAGV
GROUP BY gv.HOTEN

-- Q31: Cho biết tên gv và số lượng đề tài gv chủ nhiệm
SELECT gv.HOTEN, COUNT(*) AS SLDT
FROM GIAOVIEN gv, DETAI dt
WHERE gv.MAGV = dt.GVCNDT
GROUP BY gv.HOTEN

--Q32: Mỗi gv cho biết tên gv và số người thân
SELECT gv.HOTEN, COUNT(*) AS NGTHAN
FROM GIAOVIEN gv, NGUOITHAN nt
WHERE gv.MAGV = nt.MAGV
GROUP BY gv.HOTEN, gv.MAGV

--Q33: Cho biết tên gv tham gia 3 đề tài trở lên
SELECT gv.HOTEN
FROM GIAOVIEN gv, THAMGIADT tg
WHERE gv.MAGV = tg.MAGV
GROUP BY gv.HOTEN, gv.MAGV
HAVING COUNT(distinct tg.MADT) >=3

--Q34: Cho biết số lượng gv tg đề tài ƯDHHX
SELECT COUNT(distinct tg.MAGV) as SLGV
FROM DETAI dt, THAMGIADT tg
WHERE dt.MADT = tg.MADT and dt.TENDT = N'Ứng dụng hóa học xanh'

-------------------------------------------------------BUỔI 5------------------------------------------------------------
--Q35. Cho biết mức lương cao nhất của các giảng viên.
SELECT MAX(LUONG)
FROM GIAOVIEN 

SELECT GV1.LUONG
FROM GIAOVIEN GV1
WHERE GV1.LUONG=
(
	SELECT MAX(GV2.LUONG)
	FROM GIAOVIEN GV2
)

--Q36. Cho biết những giáo viên có lương lớn nhất.
SELECT *
FROM GIAOVIEN GV1
WHERE GV1.LUONG>=ALL
(
	SELECT LUONG
	FROM GIAOVIEN
)

--Cho biết lương cao nhất trong bộ môn “HTTT”.
SELECT GV.LUONG
FROM GIAOVIEN GV
WHERE MABM='HTTT' AND GV.LUONG>=ALL
(
	SELECT LUONG
	FROM GIAOVIEN  
)

--Q38. Cho biết tên giáo viên lớn tuổi nhất của bộ môn Hệ thống thông tin.
SELECT GV.HOTEN
FROM GIAOVIEN GV 
WHERE YEAR(GV.NGSINH)=
(
	SELECT MIN(YEAR(NGSINH))
	FROM GIAOVIEN
	WHERE MABM='HTTT'
)

--Q39. Cho biết tên giáo viên nhỏ tuổi nhất khoa Công nghệ thông tin
SELECT HOTEN
FROM GIAOVIEN
WHERE YEAR(NGSINH)=
(
	SELECT MAX(YEAR(GV.NGSINH))
	FROM GIAOVIEN GV,BOMON BM, KHOA K
	WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.TENKHOA=N'Công nghệ thông tin'
)

--Q40. Cho biết tên giáo viên và tên khoa của giáo viên có lương cao nhất.
SELECT GV.HOTEN, K.TENKHOA
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN KHOA K ON BM.MAKHOA=K.MAKHOA
WHERE GV.LUONG>=ALL
(
	SELECT LUONG
	FROM GIAOVIEN
)

--Q41. Cho biết những giáo viên có lương lớn nhất trong bộ môn của họ.
SELECT GV.HOTEN, GV.MABM, GV.LUONG
FROM GIAOVIEN GV
WHERE GV.LUONG=
(
	
	SELECT MAX(GV1.LUONG)
	FROM GIAOVIEN GV1
	WHERE GV.MABM=GV1.MABM
)

SELECT G.*
FROM GIAOVIEN G,(SELECT MAX(LUONG) AS MAXLUONG, MABM FROM GIAOVIEN G2 GROUP BY MABM) AS T
WHERE G.LUONG=T.MAXLUONG AND G.MABM=T.MABM

--Q42. Cho biết tên những đề tài mà giáo viên Nguyễn Hoài An chưa tham gia.
SELECT DT.TENDT
FROM DETAI DT
WHERE DT.MADT NOT IN 
(
	SELECT TG.MADT
	FROM THAMGIADT TG, GIAOVIEN GV
	WHERE TG.MAGV=GV.MAGV AND GV.HOTEN=N'Nguyễn Hoài An'
)

--Q43. Cho biết những đề tài mà giáo viên Nguyễn Hoài An chưa tham gia. Xuất ra tên đề tài, tên người chủ nhiệm đề tài.
SELECT DT.TENDT, GV1.HOTEN
FROM DETAI DT, GIAOVIEN GV1
WHERE DT.GVCNDT=GV1.MAGV AND DT.MADT NOT IN 
(
	SELECT TG.MADT
	FROM THAMGIADT TG, GIAOVIEN GV
	WHERE TG.MAGV=GV.MAGV AND GV.HOTEN=N'Nguyễn Hoài An'
)

--Q44. Cho biết tên những giáo viên khoa Công nghệ thông tin mà chưa tham gia đề tài nào.
SELECT GV.HOTEN
FROM GIAOVIEN GV, KHOA K, BOMON BM
WHERE GV.MAGV NOT IN 
(
	SELECT TG.MAGV 
	FROM THAMGIADT TG
)
 AND GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.TENKHOA=N'Công nghệ thông tin'

--Q45. Tìm những giáo viên không tham gia bất kỳ đề tài nào
SELECT *
FROM GIAOVIEN
WHERE MAGV NOT IN
(
	SELECT MAGV
	FROM THAMGIADT
)

--Q46. Cho biết giáo viên có lương lớn hơn lương của giáo viên “Nguyễn Hoài An”
SELECT *
FROM GIAOVIEN
WHERE LUONG > 
(
	SELECT GV.LUONG 
	FROM GIAOVIEN GV
	WHERE GV.HOTEN=N'Nguyễn Hoài An'
)

--Q47. Tìm những trưởng bộ môn tham gia tối thiểu 1 đề tài
SELECT *
FROM GIAOVIEN GV
WHERE GV.MAGV IN 
(
	SELECT TG.MAGV
	FROM THAMGIADT TG
	WHERE GV.MAGV IN
	(
		SELECT BM.TRUONGBM
		FROM BOMON BM
	)
)

SELECT *
FROM GIAOVIEN
WHERE MAGV IN (SELECT TRUONGBM FROM BOMON) AND MAGV IN (SELECT MAGV FROM THAMGIADT)

--Q48. Tìm giáo viên trùng tên và cùng giới tính với giáo viên khác trong cùng bộ môn
SELECT GV1.*
FROM GIAOVIEN GV1, GIAOVIEN GV2
WHERE GV1.HOTEN=GV2.HOTEN AND GV1.PHAI=GV2.PHAI AND GV1.MABM=GV2.MABM

--Q49. Tìm những giáo viên có lương lớn hơn lương của ít nhất một giáo viên bộ môn “Công nghệ phần mềm”
SELECT *
FROM GIAOVIEN
WHERE LUONG > ANY
(
	SELECT GV.LUONG
	FROM GIAOVIEN GV, BOMON BM
	WHERE GV.MABM=BM.MABM AND BM.TENBM=N'Công nghệ phần mêm'
)

--Q50. Tìm những giáo viên có lương lớn hơn lương của tất cả giáo viên thuộc bộ môn “Hệ thống thông tin”
SELECT *
FROM GIAOVIEN
WHERE LUONG >= ALL
(
	SELECT GV.LUONG
	FROM GIAOVIEN GV, BOMON BM
	WHERE GV.MABM=BM.MABM AND BM.TENBM=N'Hệ thống thông tin'
)

--Q51. Cho biết tên khoa có đông giáo viên nhất
SELECT K.TENKHOA
FROM KHOA K, GIAOVIEN GV, BOMON BM
WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA
GROUP BY K.TENKHOA
HAVING COUNT(DISTINCT GV.MAGV) >= ALL
(
	SELECT COUNT(DISTINCT GV1.MAGV)
	FROM GIAOVIEN GV1, KHOA K1, BOMON BM1
	WHERE GV1.MABM=BM1.MABM AND BM1.MAKHOA=K1.MAKHOA
	GROUP BY K1.MAKHOA
)

--Q52. Cho biết họ tên giáo viên chủ nhiệm nhiều đề tài nhất
SELECT GV.HOTEN
FROM GIAOVIEN GV, DETAI DT
WHERE GV.MAGV=DT.GVCNDT
GROUP BY GV.HOTEN
HAVING COUNT(*) >= ALL
(
	SELECT COUNT(*)
	FROM GIAOVIEN GV1, DETAI DT1
	WHERE GV1.MAGV=DT1.GVCNDT
	GROUP BY GV1.MAGV
)

--Q53. Cho biết mã bộ môn có nhiều giáo viên nhất
SELECT MABM
FROM GIAOVIEN
GROUP BY MABM
HAVING COUNT(*) >= ALL
(
	SELECT COUNT(*)
	FROM GIAOVIEN
	GROUP BY MABM
)

--Q54. Cho biết tên giáo viên và tên bộ môn của giáo viên tham gia nhiều đề tài nhất.
SELECT GV.HOTEN, BM.TENBM
FROM GIAOVIEN GV, BOMON BM, THAMGIADT TG
WHERE GV.MABM=BM.MABM AND GV.MAGV=TG.MAGV
GROUP BY GV.HOTEN, BM.TENBM
HAVING COUNT(*) >= ALL
(
	SELECT COUNT(*)
	FROM GIAOVIEN GV1, THAMGIADT TG1
	WHERE TG1.MAGV=GV1.MAGV
	GROUP BY GV1.HOTEN
)

--Q55. Cho biết tên giáo viên tham gia nhiều đề tài nhất của bộ môn HTTT.
SELECT GV.HOTEN
FROM GIAOVIEN GV, THAMGIADT DT
WHERE GV.MAGV=DT.MAGV AND GV.MABM='HTTT'
GROUP BY GV.HOTEN
HAVING COUNT(*) >= ALL
(
	SELECT COUNT(*)
	FROM GIAOVIEN GV1, THAMGIADT TG1
	WHERE TG1.MAGV=GV1.MAGV
	GROUP BY GV1.MAGV
)

--Q56. Cho biết tên giáo viên và tên bộ môn của giáo viên có nhiều người thân nhất.
SELECT GV.HOTEN, BM.TENBM
FROM GIAOVIEN GV, BOMON BM, NGUOITHAN NT
WHERE GV.MABM=BM.MABM AND GV.MAGV=NT.MAGV
GROUP BY GV.HOTEN, BM.TENBM
HAVING COUNT(*) >= ALL
(
	SELECT COUNT(*)
	FROM GIAOVIEN GV1, NGUOITHAN NT1
	WHERE GV1.MAGV=NT1.MAGV
	GROUP BY GV1.MAGV
)

--Q57. Cho biết tên trưởng bộ môn mà chủ nhiệm nhiều đề tài nhất.
SELECT GV.HOTEN
FROM GIAOVIEN GV, DETAI DT, BOMON BM
WHERE GV.MAGV=DT.GVCNDT AND GV.MAGV=BM.TRUONGBM
GROUP BY GV.HOTEN
HAVING COUNT(*) >= ALL
(
	SELECT COUNT(*)
	FROM GIAOVIEN GV1, DETAI DT1
	WHERE GV1.MAGV=DT1.GVCNDT
	GROUP BY GV1.MAGV
)

-------------------------------------------------------BUỔI 6------------------------------------------------------------
--Q58. Cho biết tên giáo viên nào mà tham gia đề tài đủ tất cả các chủ đề
--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CHUDE.MACD FROM CHUDE
					EXCEPT
				SELECT DT.MACD 
				FROM DETAI DT, THAMGIADT TGDT
				WHERE GV.MAGV=TGDT.MAGV AND TGDT.MADT=DT.MADT
				)
-- NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(
				SELECT * FROM CHUDE CD
				WHERE NOT EXISTS(select * 
				FROM DETAI DT, THAMGIADT TGDT
				WHERE GV.MAGV=TGDT.MAGV AND TGDT.MADT=DT.MADT AND CD.MACD= DT.MACD)
				)

-- COUNT: ĐẾM SỐ CHỦ ĐỀ MÀ GIÁO VIÊN THAM GIA SAU ĐÓ SO SÁNH VỚI TỔNG SỐ CHỦ ĐỀ
select GV.HOTEN
from GIAOVIEN GV, THAMGIADT TGDT, DETAI DT
WHERE GV.MAGV=TGDT.MAGV AND TGDT.MADT=DT.MADT
GROUP BY GV.HOTEN
HAVING COUNT(DISTINCT DT.MACD) = (
								SELECT COUNT(CHUDE.MACD)
								FROM CHUDE
								)

--Q59. Cho biết tên đề tài nào mà được tất cả các giáo viên của bộ môn HTTT tham gia.

--EXCEPT
SELECT DT1.TENDT
FROM DETAI DT1
WHERE NOT EXISTS( 
				SELECT GV.MAGV
				FROM GIAOVIEN GV
				WHERE GV.MABM='HTTT'
				EXCEPT
				SELECT TGDT.MAGV
				from THAMGIADT TGDT
				WHERE TGDT.MADT=DT1.MADT
				)
--NOT EXISTS
SELECT DT1.TENDT
FROM DETAI DT1
WHERE NOT EXISTS( 
				SELECT *
				FROM GIAOVIEN GV
				WHERE GV.MABM='HTTT'AND NOT EXISTS(
				SELECT *
				FROM THAMGIADT TGDT
				WHERE TGDT.MADT=DT1.MADT AND GV.MAGV = TGDT.MAGV
				)
	)

--COUNT: CHỌN 1 ĐỀ TÀI, ĐẾM SỐ LƯỢNG GIÁO VIÊN HTTT THAM GIA ĐỀ TÀI ĐÓ RỒI SO SÁNH VỚI TỔNG GIÁO VIÊN BỘ MÔN HTTT
SELECT DT.TENDT
FROM DETAI DT, GIAOVIEN GV, THAMGIADT TG
WHERE GV.MABM='HTTT' AND GV.MAGV=TG.MAGV AND TG.MADT=DT.MADT
GROUP BY DT.TENDT
HAVING COUNT(DISTINCT TG.MAGV) = (
								SELECT COUNT(GV2.MAGV) 
								FROM GIAOVIEN GV2
								WHERE GV2.MABM='HTTT' )




--Q60. Cho biết tên đề tài có tất cả giảng viên bộ môn “Hệ thống thông tin” tham gia
--EXCEPT
select DT1.TENDT
FROM DETAI DT1
where NOT EXISTS( 
				SELECT GV.MAGV
				FROM GIAOVIEN GV, BOMON BM
				WHERE BM.TENBM=N'Hệ thống thông tin' and BM.MABM= GV.MABM
				EXCEPT
				select TGDT.MAGV
				from THAMGIADT TGDT
				WHERE TGDT.MADT=DT1.MADT
				)
-- NOT EXISTS
SELECT DT1.TENDT
FROM DETAI DT1
WHERE NOT exists( 
				SELECT *
				FROM GIAOVIEN GV, BOMON BM
				WHERE BM.TENBM=N'Hệ thống thông tin' AND BM.MABM= GV.MABM
				AND NOT EXISTS(
				SELECT *
				FROM THAMGIADT TGDT
				WHERE TGDT.MADT=DT1.MADT AND GV.MAGV = TGDT.MAGV
				)
	)
-- COUNT
SELECT DT.TENDT
from DETAI DT, GIAOVIEN GV, THAMGIADT TG, BOMON BM
WHERE BM.TENBM=N'Hệ thống thông tin' AND GV.MABM=BM.MABM AND GV.MAGV=TG.MAGV AND TG.MADT=DT.MADT
GROUP BY DT.TENDT
HAVING COUNT(DISTINCT TG.MAGV) = (
								SELECT COUNT(GV2.MAGV) 
								FROM GIAOVIEN GV2, BOMON BM2
								WHERE BM2.TENBM=N'Hệ thống thông tin' AND GV2.MABM=BM2.MABM )

--Q61. Cho biết giáo viên nào đã tham gia tất cả các đề tài có mã chủ đề là QLGD.
-- EXCEPT
SELECT DISTINCT TG1.MAGV, GV.HOTEN
FROM THAMGIADT TG1, GIAOVIEN GV
WHERE TG1.MAGV=GV.MAGV AND NOT EXISTS (
						( SELECT MADT FROM DETAI WHERE MACD=N'QLGD')
						EXCEPT
						( SELECT MADT
						FROM THAMGIADT TG2
						WHERE TG2.MAGV = TG1.MAGV ))
--NOT EXIST
SELECT DISTINCT TG1.MAGV, GV.HOTEN
FROM THAMGIADT TG1, GIAOVIEN GV
WHERE TG1.MAGV=GV.MAGV	AND NOT EXISTS (
						 SELECT *  FROM DETAI DT WHERE DT.MACD=N'QLGD'
						AND NOT EXISTS(SELECT *
						FROM THAMGIADT TG2
						WHERE TG2.MAGV = TG1.MAGV AND DT.MADT= TG2.MADT)
						)

--COUNT
SELECT GV1.HOTEN
FROM GIAOVIEN GV1, THAMGIADT TG1, DETAI DT1
WHERE GV1.MAGV=TG1.MAGV AND TG1.MADT=DT1.MADT AND DT1.MACD=N'QLGD'
GROUP BY GV1.HOTEN
HAVING COUNT (DISTINCT DT1.MADT) = (
									SELECT COUNT(DT2.MACD)
									FROM DETAI DT2
									WHERE DT2.MACD=N'QLGD')


--Q62. Cho biết tên giáo viên nào tham gia tất cả các đề tài mà giáo viên Trần Trà Hương đã tham gia.
--EXCEPT
SELECT GV1.HOTEN
FROM GIAOVIEN GV1
WHERE GV1.HOTEN !=N'Trần Trà Hương' AND  NOT EXISTS( 
				SELECT TGDT.MADT
				FROM THAMGIADT TGDT, GIAOVIEN GV
				WHERE GV.HOTEN=N'Trần Trà Hương' and GV.MAGV=TGDT.MAGV
				EXCEPT
				SELECT TGDT2.MADT
				FROM THAMGIADT TGDT2
				WHERE GV1.MAGV=TGDT2.MAGV
				)

-- NOT EXISTS
SELECT GV1.HOTEN
FROM GIAOVIEN GV1
WHERE GV1.HOTEN !=N'Trần Trà Hương' AND  NOT EXISTS( 
				SELECT TGDT.MADT
				FROM THAMGIADT TGDT, GIAOVIEN GV
				WHERE GV.HOTEN=N'Trần Trà Hương' and GV.MAGV=TGDT.MAGV
				AND NOT EXISTS(
				select TGDT2.MADT
				FROM THAMGIADT TGDT2
				WHERE GV1.MAGV=TGDT2.MAGV AND TGDT.MADT= TGDT2.MADT)
				)

--COUNT
SELECT GV2.HOTEN
FROM GIAOVIEN GV2, THAMGIADT TG2
WHERE GV2.HOTEN != N'Trần Trà Hương' AND GV2.MAGV=TG2.MAGV AND TG2.MADT IN (Select TG1.MADT
										FROM GIAOVIEN GV1, THAMGIADT TG1
										WHERE GV1.HOTEN=N'Trần Trà Hương' AND GV1.MAGV=TG1.MAGV)
GROUP BY GV2.HOTEN
HAVING COUNT(DISTINCT TG2.MADT) = (SELECT COUNT(TG1.MADT)
										FROM GIAOVIEN GV1, THAMGIADT TG1
										WHERE GV1.HOTEN=N'Trần Trà Hương' AND GV1.MAGV=TG1.MAGV)

--Q63. Cho biết tên đề tài nào mà được tất cả các giáo viên của bộ môn Hóa Hữu Cơ tham gia.
--EXCEPT
SELECT DT1.TENDT
FROM DETAI DT1
WHERE NOT EXISTS( 
				SELECT GV.MAGV
				FROM GIAOVIEN GV, BOMON BM
				WHERE BM.TENBM=N'Hóa hữu cơ' AND BM.MABM= GV.MABM
				EXCEPT
				SELECT TGDT.MAGV
				FROM THAMGIADT TGDT
				WHERE TGDT.MADT=DT1.MADT
				)

--NOT EXISTS
SELECT DT1.TENDT
FROM DETAI DT1
WHERE NOT EXISTS( 
				SELECT GV.MAGV
				FROM GIAOVIEN GV, BOMON BM
				WHERE BM.TENBM=N'Hóa hữu cơ' AND BM.MABM= GV.MABM
				AND NOT EXISTS(
				SELECT TGDT.MAGV
				FROM THAMGIADT TGDT
				WHERE TGDT.MADT=DT1.MADT AND GV.MAGV=TGDT.MAGV)
				)
-- COUNT
SELECT DT1.TENDT
FROM DETAI DT1, THAMGIADT TG1
WHERE TG1.MAGV IN (SELECT GV1.MAGV
					FROM GIAOVIEN GV1, BOMON BM1
					WHERE BM1.TENBM=N'Hóa hữu cơ' AND BM1.MABM= GV1.MABM)
GROUP BY DT1.TENDT
HAVING COUNT(DISTINCT TG1.MAGV) = (
								SELECT COUNT(GV2.MAGV)
								FROM GIAOVIEN GV2, BOMON BM2
								WHERE BM2.TENBM=N'Hóa hữu cơ' AND BM2.MABM= GV2.MABM
									)

--Q64. Cho biết tên giáo viên nào mà tham gia tất cả các công việc của đề tài 006.
--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CV.SOTT
				FROM CONGVIEC CV
				WHERE CV.MADT='006'	
				EXCEPT
				SELECT TGDT.STT
				FROM THAMGIADT TGDT
				WHERE GV.MAGV=TGDT.MAGV AND TGDT.MADT='006')
--NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT * 
				FROM CONGVIEC CV
				WHERE CV.MADT='006'	
				AND NOT EXISTS(
				SELECT *
				FROM THAMGIADT TGDT
				WHERE GV.MAGV=TGDT.MAGV AND TGDT.MADT='006' AND CV.STT=TGDT.STT))
-- COUNT				
SELECT GV.HOTEN
FROM GIAOVIEN GV, THAMGIADT TG
WHERE GV.MAGV=TG.MAGV AND TG.MADT='006'
GROUP BY GV.HOTEN
HAVING COUNT(DISTINCT TG.STT) = (SELECT COUNT(CV.SOTT)
								FROM CONGVIEC CV
								WHERE CV.MADT='006')

--Q65. Cho biết giáo viên nào đã tham gia tất cả các đề tài của chủ đề Ứng dụng công nghệ.
--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT
				FROM DETAI DT, CHUDE CD
				WHERE CD.TENCD = N'Ứng dụng công nghệ' AND CD.MACD=DT.MACD
				EXCEPT
				SELECT TGDT.MADT
				FROM THAMGIADT TGDT
				WHERE TGDT.MAGV=GV.MAGV
				)
--NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT *
				FROM DETAI DT, CHUDE CD
				WHERE CD.TENCD = N'Ứng dụng công nghệ' AND CD.MACD=DT.MACD
				AND NOT EXISTS(
				SELECT *
				FROM THAMGIADT TGDT
				WHERE TGDT.MAGV=GV.MAGV AND DT.MADT=TGDT.MADT)
				)
-- COUNT
SELECT GV.HOTEN
FROM GIAOVIEN GV, THAMGIADT TG, CHUDE CD, DETAI DT
WHERE CD.TENCD = N'Ứng dụng công nghệ' AND CD.MACD=DT.MACD AND DT.MADT=TG.MADT AND TG.MAGV=GV.MAGV
GROUP BY GV.HOTEN
HAVING COUNT(DISTINCT TG.STT) = (SELECT COUNT(DT.MADT)
								FROM DETAI DT, CHUDE CD
								WHERE CD.TENCD = N'Ứng dụng công nghệ' and CD.MACD=DT.MACD)

--Q66. Cho biết tên giáo viên nào đã tham gia tất cả các đề tài của do Trần Trà Hương làm chủ nhiệm.
--EXCEPT
SELECT GV1.HOTEN
FROM GIAOVIEN GV1
WHERE NOT EXISTS(	SELECT DT.MADT
					FROM DETAI DT, GIAOVIEN GV
					WHERE GV.HOTEN=N'Trần Trà Hương' AND GV.MAGV=DT.GVCNDT
					EXCEPT
					SELECT TGDT.MADT
					FROM THAMGIADT TGDT
					WHERE TGDT.MAGV=GV1.MAGV
				)
--NOT EXISTS
SELECT GV1.HOTEN
FROM GIAOVIEN GV1
WHERE NOT EXISTS(	SELECT DT.MADT
					FROM DETAI DT, GIAOVIEN GV
					WHERE GV.HOTEN=N'Trần Trà Hương' AND GV.MAGV=DT.GVCNDT
					AND NOT EXISTS(
					SELECT TGDT.MADT
					FROM THAMGIADT TGDT
					WHERE TGDT.MAGV=GV1.MAGV AND DT.MADT= TGDT.MADT)
				)
--COUNT
SELECT GV.HOTEN
FROM GIAOVIEN GV, THAMGIADT TG
WHERE GV.MAGV=TG.MAGV AND TG.MADT IN (SELECT DT.MADT
										FROM DETAI DT, GIAOVIEN GV
										WHERE GV.HOTEN=N'Trần Trà Hương' AND GV.MAGV=DT.GVCNDT)
GROUP BY GV.HOTEN
having COUNT(distinct TG.MADT) = (SELECT COUNT(DT.MADT)
										FROM DETAI DT, GIAOVIEN GV
										WHERE GV.HOTEN=N'Trần Trà Hương' AND GV.MAGV=DT.GVCNDT)

--Q67. Cho biết tên đề tài nào mà được tất cả các giáo viên của khoa CNTT tham gia.
--EXCEPT
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV.MAGV
				FROM GIAOVIEN GV,BOMON BM, KHOA K
				WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.MAKHOA=N'CNTT'
				EXCEPT
				SELECT TGDT.MAGV
				FROM THAMGIADT TGDT
				WHERE TGDT.MADT=DT.MADT
				)
-- NOT EXISTS
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT *
				FROM GIAOVIEN GV,BOMON BM, KHOA K
				WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.MAKHOA=N'CNTT'
				AND NOT EXISTS(
				SELECT *
				FROM THAMGIADT TGDT
				WHERE TGDT.MADT=DT.MADT and GV.MAGV= TGDT.MAGV)
				)
-- COUNT
select DT.TENDT
from DETAI DT,THAMGIADT TG
WHERE DT.MADT=TG.MADT AND TG.MAGV IN (SELECT GV.MAGV
									FROM GIAOVIEN GV,BOMON BM, KHOA K
									WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.MAKHOA=N'CNTT')
GROUP BY DT.TENDT
HAVING COUNT(DISTINCT TG.MAGV) = (select COUNT(GV.MAGV)
					FROM GIAOVIEN GV,BOMON BM, KHOA K
					WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.MAKHOA=N'CNTT')

--Q68. Cho biết tên giáo viên nào mà tham gia tất cả các công việc của đề tài Nghiên cứu tế bào gốc.
--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CV.SOTT
				FROM CONGVIEC CV, DETAI DT
				WHERE DT.TENDT=N'Nghiên cứu tế bào gốc' AND DT.MADT=CV.MADT	
				EXCEPT
				SELECT TGDT.STT
				FROM THAMGIADT TGDT, DETAI DT2
				WHERE DT2.TENDT=N'Nghiên cứu tế bào gốc' AND DT2.MADT=TGDT.MADT AND GV.MAGV=TGDT.MAGV)
-- NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT *
				FROM CONGVIEC CV, DETAI DT
				WHERE DT.TENDT=N'Nghiên cứu tế bào gốc' AND DT.MADT=CV.MADT	
				AND NOT EXISTS( 
				SELECT *
				FROM THAMGIADT TGDT, DETAI DT2
				WHERE DT2.TENDT=N'Nghiên cứu tế bào gốc' AND DT2.MADT=TGDT.MADT 
				AND GV.MAGV=TGDT.MAGV and TGDT.STT=CV.SOTT)
			)

--COUNT
SELECT GV.HOTEN
FROM GIAOVIEN GV, DETAI DT, THAMGIADT TG
WHERE GV.MAGV=TG.MAGV AND TG.MADT=DT.MADT AND DT.TENDT=N'Nghiên cứu tế bào gốc'
GROUP BY GV.HOTEN
HAVING COUNT(DISTINCT TG.STT) = (select COUNT(CV.SOTT)
				FROM CONGVIEC CV, DETAI DT1
				WHERE DT1.TENDT=N'Nghiên cứu tế bào gốc' AND DT1.MADT=CV.MADT)

--Q69. Tìm tên các giáo viên được phân công làm tất cả các đề tài có kinh phí trên 100 triệu?
--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT
				FROM DETAI DT
				WHERE DT.KINHPHI>1000
				EXCEPT
				SELECT TGDT.MADT
				FROM THAMGIADT TGDT
				WHERE GV.MAGV=TGDT.MAGV
				)
-- NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT *
				FROM DETAI DT
				WHERE DT.KINHPHI>1000
				AND NOT EXISTS(
				SELECT *
				FROM THAMGIADT TGDT
				WHERE GV.MAGV=TGDT.MAGV AND DT.MADT= TGDT.MADT)
				)
--COUNT
SELECT GV.HOTEN
FROM GIAOVIEN GV,THAMGIADT TG
WHERE GV.MAGV=TG.MAGV AND TG.MADT IN (SELECT DT1.MADT
					from DETAI DT1
					WHERE DT1.KINHPHI>1000)
GROUP BY GV.HOTEN
HAVING COUNT(DISTINCT TG.MADT) = (SELECT COUNT(DT1.MADT)
					from DETAI DT1
					WHERE DT1.KINHPHI>1000)

--Q70. Cho biết tên đề tài nào mà được tất cả các giáo viên của khoa Sinh Học tham gia.
--EXCEPT
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV.MAGV
				FROM GIAOVIEN GV,BOMON BM, KHOA K
				WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.TENKHOA=N'Sinh học'
				EXCEPT
				SELECT TGDT.MAGV
				FROM THAMGIADT TGDT
				WHERE TGDT.MADT=DT.MADT
				)
--NOT EXISTST
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT *
				FROM GIAOVIEN GV,BOMON BM, KHOA K
				WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.TENKHOA=N'Sinh học'
				AND NOT EXISTS(
				SELECT *
				FROM THAMGIADT TGDT
				WHERE TGDT.MADT=DT.MADT AND GV.MAGV=TGDT.MAGV)
				)
-- COUNT
SELECT DT.TENDT
FROM DETAI DT, THAMGIADT TG
WHERE DT.MADT=TG.MADT AND TG.MAGV IN (SELECT GV.MAGV
					FROM GIAOVIEN GV,BOMON BM, KHOA K
					WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.TENKHOA=N'Sinh học')
GROUP BY DT.TENDT
HAVING COUNT(DISTINCT TG.MAGV) = (SELECT COUNT(GV.MAGV)
					FROM GIAOVIEN GV,BOMON BM, KHOA K
					WHERE GV.MABM=BM.MABM AND BM.MAKHOA=K.MAKHOA AND K.TENKHOA=N'Sinh học')

--Q71. Cho biết mã số, họ tên, ngày sinh của giáo viên tham gia tất cả các công việc của đề tài “Ứng dụng hóa học xanh”.
--EXCEPT
SELECT GV.MAGV, GV.HOTEN, GV.NGSINH
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CV.SOTT
				FROM CONGVIEC CV, DETAI DT
				WHERE DT.TENDT=N'Ứng dụng hóa học xanh' AND DT.MADT=CV.MADT	
				EXCEPT
				SELECT TGDT.STT
				FROM THAMGIADT TGDT, DETAI DT2
				WHERE DT2.TENDT=N'Ứng dụng hóa học xanh' AND DT2.MADT=TGDT.MADT AND GV.MAGV=TGDT.MAGV)
--NOT EXISTS
SELECT GV.MAGV, GV.HOTEN, GV.NGSINH
FROM GIAOVIEN GV
WHERE NOT EXISTS( select CV.SOTT
				FROM CONGVIEC CV, DETAI DT
				WHERE DT.TENDT=N'Ứng dụng hóa học xanh' AND DT.MADT=CV.MADT	
				AND NOT EXISTS(
				SELECT TGDT.STT
				FROM THAMGIADT TGDT, DETAI DT2
				WHERE DT2.TENDT=N'Ứng dụng hóa học xanh' AND DT2.MADT=TGDT.MADT AND GV.MAGV=TGDT.MAGV AND CV.SOTT=TGDT.STT))
-- COUNT
SELECT GV.MAGV, GV.HOTEN, GV.NGSINH
FROM GIAOVIEN GV, DETAI DT, THAMGIADT TG
WHERE DT.TENDT=N'Ứng dụng hóa học xanh' AND TG.MADT=DT.MADT
GROUP BY GV.MAGV, GV.HOTEN, GV.NGSINH
HAVING COUNT(DISTINCT TG.STT) = (SELECT COUNT(CV.SOTT)
				FROM CONGVIEC CV, DETAI DT
				WHERE DT.TENDT=N'Ứng dụng hóa học xanh' AND DT.MADT=CV.MADT	)

--Q72. Cho biết mã số, họ tên, tên bộ môn và tên người quản lý chuyên môn của giáo viên tham gia tất cả các đề tài thuộc chủ đề “Nghiên cứu phát triển”.

--EXCEPT
SELECT GV.MAGV, GV.HOTEN, BM.TENBM, GVQLBM.HOTEN
FROM GIAOVIEN GV, GIAOVIEN GVQLBM, BOMON BM
WHERE GV.MABM=BM.MABM AND GV.GVQLCM=GVQLBM.MAGV 
				AND NOT EXISTS(SELECT DT.MADT
				FROM DETAI DT, CHUDE CD
				WHERE CD.TENCD = N'Nghiên cứu phát triển' AND CD.MACD=DT.MACD
				EXCEPT
				SELECT TGDT.MADT
				FROM THAMGIADT TGDT
				WHERE TGDT.MAGV=GV.MAGV
				)
--NOT EXISTS
select GV.MAGV, GV.HOTEN, BM.TENBM, GVQLBM.HOTEN
FROM GIAOVIEN GV, GIAOVIEN GVQLBM, BOMON BM
WHERE GV.MABM=BM.MABM AND GV.GVQLCM=GVQLBM.MAGV 
				AND NOT EXISTS(SELECT *
				FROM DETAI DT, CHUDE CD
				WHERE CD.TENCD = N'Nghiên cứu phát triển' AND CD.MACD=DT.MACD
				AND NOT EXISTS(
				SELECT *
				FROM THAMGIADT TGDT
				WHERE TGDT.MAGV=GV.MAGV and DT.MADT=TGDT.MADT)
				)

--COUNT
SELECT GV.MAGV, GV.HOTEN, BM.TENBM, GVQLBM.HOTEN
FROM GIAOVIEN GV, GIAOVIEN GVQLBM, BOMON BM, THAMGIADT TG, CHUDE CD, DETAI DT
WHERE GV.MABM=BM.MABM AND GV.GVQLCM=GVQLBM.MAGV AND TG.MAGV=GV.MAGV AND TG.MADT=DT.MADT
AND DT.TENDT=N'Nghiên cứu phát triển'
GROUP BY  GV.MAGV, GV.HOTEN, BM.TENBM, GVQLBM.HOTEN
HAVING COUNT(DISTINCT DT.MADT ) = (SELECT COUNT(DT1.MADT)
				FROM DETAI DT1, CHUDE CD1
				WHERE CD1.TENCD = N'Nghiên cứu phát triển' AND CD1.MACD=DT1.MACD)


-------------------------------------------------------BUỔI 7------------------------------------------------------------
--Q75. Cho biết họ tên giáo viên và tên bộ môn họ làm trưởng bộ môn nếu có
SELECT GV.HOTEN, BM.TENBM
FROM GIAOVIEN GV LEFT JOIN BOMON BM ON BM.TRUONGBM=GV.MAGV

--Q76. Cho danh sách tên bộ môn và họ tên trưởng bộ môn đó nếu có
SELECT BM.TENBM, GV.HOTEN
FROM GIAOVIEN GV RIGHT JOIN BOMON BM ON BM.TRUONGBM=GV.MAGV

--Q77. Cho biết danh sách tên giáo viên và các đề tài giáo viên đó chủ nhiệm nếu có
SELECT GV.HOTEN, DT.TENDT
FROM GIAOVIEN GV LEFT JOIN DETAI DT ON GV.MAGV=DT.GVCNDT

--Q78. Xuất ra thông tin của giáo viên (MAGV, HOTEN) và mức lương của giáo viên. Mức lương được xếp theo quy tắc: Lương của giáo viên < $1800 : “THẤP” ; Từ $1800 đến $2200: TRUNG BÌNH; Lương > $2200: “CAO”

SELECT GV.MAGV, GV.HOTEN, CASE 
					WHEN GV.LUONG < 1800 THEN N'THẤP'
					WHEN GV.LUONG >= 1800 AND GV.LUONG <= 2200 THEN N'TRUNG BINH'
					WHEN GV.LUONG > 2200 THEN N'CAO'
					END AS MUCLUONG
FROM GIAOVIEN GV

--Q79. Xuất ra thông tin giáo viên (MAGV, HOTEN) và xếp hạng dựa vào mức lương. Nếu giáo viên có lương cao nhất thì hạng là 1.
select gv.MAGV, gv.HOTEN, gv.LUONG, rank() over (order by gv.LUONG) 
from GIAOVIEN gv

--Q80: Xuất ra thu nhập, thu nhập = lương + phụ cấp. trưởng môn pc = 300, trưởng khoa pc = 600
select gv.MAGV,
	case gv.MAGV
		when k.TRUONGKHOA then gv.LUONG + 600
		when bm.TRUONGBM then gv.LUONG + 300
		when gv.MAGV then gv.LUONG
		end
from GIAOVIEN gv left join BOMON bm on gv.MAGV = bm.TRUONGBM left join KHOA k on gv.MAGV = k.TRUONGKHOA
--Trường hợp vừa trưởng khoa vừa trưởng môn -> + 900 ?

--Q81: Cho biết năm dự kiến giáo viên nghỉ hưu
select gv.HOTEN, case gv.PHAI
					when 'Nam' then year(gv.NGSINH) + 60
					when N'Nữ' then year(gv.NGSINH) + 55
					end
from GIAOVIEN gv

--Q82: Cho biết tất cả gv và họ tên gvqlcm của họ nếu có
select gv.MAGV, gv.HOTEN, nql.HOTEN as TENGVQL
from GIAOVIEN gv left join GIAOVIEN nql on gv.GVQLCM = nql.MAGV

--Q83: Cho biết danh sách tất cả bộ môn, trưởng bộ môn, số giáo viên mỗi bộ môn
select bm.MABM, bm.TENBM, bm.TRUONGBM, (select gv1.HOTEN from GIAOVIEN gv1 where gv1.MAGV = bm.TRUONGBM) as TENTRUONGBM,
		count (gv.MAGV) as SOLUONGGV
from BOMON bm left join GIAOVIEN gv on bm.TRUONGBM = gv.MAGV
group by bm.MABM, bm.TENBM, bm.TRUONGBM

--Q84: cho biết các giáo viên nam và thông tin công việc họ đã tham gia
select distinct gv.HOTEN, cv.TENCV
from GIAOVIEN gv left join THAMGIADT tg on gv.MAGV = tg.MAGV left join CONGVIEC cv on tg.STT = cv.SOTT
where gv.PHAI = 'Nam'

--Q85: Cho biết danh sách tất cả giáo viên và thông tin công việc thuộc đề tài 001 mà họ tham gia
select distinct gv.HOTEN, cv.TENCV
from GIAOVIEN gv left join THAMGIADT tg on gv.MAGV = tg.MAGV left join CONGVIEC cv on tg.STT = cv.SOTT
where tg.MADT = '001' 

--Q86: cho biết thông tin các trưởng bộ môn về hưu năm 2014
select gv.MAGV, gv.HOTEN
from GIAOVIEN gv join BOMON bm on gv.MAGV = bm.TRUONGBM
where 2014 - year(gv.NGSINH) = case gv.PHAI	
		when 'Nam' then 60
		when 'Nam' then 55
		end

--Q87: cho biết thông tin trưởng khoa và năm họ về hưu
select gv.MAGV, case gv.PHAI
				when 'Nam' then year(gv.NGSINH + 60)
				when N'Nữ' then year(gv.NGSINH + 55)
				end
from GIAOVIEN gv join KHOA k on gv.MAGV = k.TRUONGKHOA

create table DANHSACHTHIDUA
(
	MAGV char(5), 
	SODTDAT int,
	DANHHIEU nvarchar(100)

	primary key(MAGV)
)

insert into DANHSACHTHIDUA
select gv.MAGV, count(tg.KETQUA) ,NULL
from GIAOVIEN gv left join THAMGIADT tg on gv.MAGV = tg.MAGV
group by gv.MAGV

update DANHSACHTHIDUA
set DANHHIEU = case 
				when SODTDAT = 0 then N'Chưa hoàn thành nhiệm vụ'
				when SODTDAT >=1 and SODTDAT <=2 then N'Hoàn thành nhiệm vụ'
				when SODTDAT >=3 and SODTDAT <=5 then N'Tiên tiến'
				when SODTDAT >=6 then N'Lao động xuất sắc'
				end

-------------------------------------------------------BUỔI 8------------------------------------------------------------
-- P2
CREATE FUNCTION P2_TINH_SODT(@MAGV char(3))
RETURNS INT
AS
BEGIN
	IF(NOT EXISTS(SELECT MAGV FROM GIAOVIEN WHERE MAGV = @MAGV))
		RETURN 0
	RETURN (SELECT COUNT(DISTINCT MADT)
			FROM GIAOVIEN LEFT JOIN THAMGIADT ON GIAOVIEN.MAGV = THAMGIADT.MAGV
			WHERE GIAOVIEN.MAGV = @MAGV
			GROUP BY GIAOVIEN.MAGV)
END
GO

-- P3
CREATE FUNCTION P3_SO_THANNHAN(@MAGV char(3))
RETURNS INT
AS
BEGIN
	IF(NOT EXISTS(SELECT MAGV FROM GIAOVIEN WHERE MAGV = @MAGV))
		RETURN 0
	RETURN (SELECT COUNT(NGUOITHAN.MAGV)
			FROM GIAOVIEN LEFT JOIN NGUOITHAN ON GIAOVIEN.MAGV = NGUOITHAN.MAGV
			WHERE GIAOVIEN.MAGV = @MAGV
			GROUP BY GIAOVIEN.MAGV)
END
GO

-- P4
CREATE FUNCTION P4_TONTAI_GV(@HOTEN nvarchar(40), @NGSINH datetime, @DIACHI nvarchar(40))
RETURNS BIT
AS
BEGIN
	IF(EXISTS(SELECT * FROM GIAOVIEN WHERE HOTEN = @HOTEN AND NGSINH = @NGSINH AND DIACHI = @DIACHI))
		RETURN 1
	RETURN 0
END
GO

-- P5
CREATE FUNCTION P5_KTR_GV_THAMGIADT(@MAGV char(3))
RETURNS BIT
AS
BEGIN
	IF(EXISTS(SELECT DISTINCT GIAOVIEN.MAGV
			  FROM GIAOVIEN LEFT JOIN THAMGIADT ON GIAOVIEN.MAGV = THAMGIADT.MAGV AND GIAOVIEN.MAGV = @MAGV
							LEFT JOIN DETAI ON THAMGIADT.MADT = DETAI.MADT
							LEFT JOIN GIAOVIEN CN ON GVCNDT = CN.MAGV
			  WHERE GIAOVIEN.MABM != CN.MABM))
		RETURN 0
	RETURN 1
END
GO

-- P6
CREATE FUNCTION P6_KTR_GV_THAMGIACV(@MAGV char(3), @MADT char(3), @SOTT int)
-- MAGV duoc nhap vao la ma giao vien cua giao vien co tham gia chi 1 cong viec SOTT cua de tai MADT
RETURNS BIT
AS
BEGIN
	IF(EXISTS(SELECT MAGV FROM GIAOVIEN WHERE MAGV = @MAGV))
		IF(EXISTS(SELECT MADT, SOTT FROM CONGVIEC WHERE MADT = @MADT AND SOTT = @SOTT AND NGAYKT > NGAYBD))
			IF(dbo.P5_KTR_GV_THAMGIADT(@MAGV) = 1)
				RETURN 1
	RETURN 0
END
GO

-- P10
CREATE FUNCTION P10_KTR_GV_MOI(@HOTEN nvarchar(40), @NGSINH datetime, @LUONG int)
RETURNS BIT
AS
BEGIN
	IF(@HOTEN NOT IN(SELECT HOTEN FROM GIAOVIEN) AND YEAR(GETDATE()) - YEAR(@NGSINH) > 18 AND @LUONG > 0)
		RETURN 1
	RETURN 0
END
GO

-------------------------------------------------------------- PROCEDURES --------------------------------------------------------------
-- P1
CREATE PROCEDURE P1_XUAT_DS_GV
AS
	SELECT * FROM GIAOVIEN
GO

-- P2
CREATE PROCEDURE P2_SO_DT @MAGV char(3)
AS
	PRINT N'Số đề tài mà giáo viên ' + @MAGV + N' tham gia là: ' + CONVERT(char, dbo.P2_TINH_SODT(@MAGV))
GO

-- P3
CREATE PROCEDURE P3_INFO_GV @MAGV char(3)
AS
	IF(EXISTS(SELECT MAGV FROM GIAOVIEN WHERE MAGV = @MAGV))
	BEGIN
		DECLARE @hoten nvarchar(40)
		DECLARE @luong int
		DECLARE @phai nchar(3)
		DECLARE @ngsinh datetime
		DECLARE @diachi nvarchar(40)
		DECLARE @gvqlcm char(3)
		DECLARE @mabm nchar(4)
		SELECT @hoten = HOTEN, @luong = LUONG, @phai = PHAI, @ngsinh = NGSINH, @diachi = DIACHI, @gvqlcm = GVQLCM, @mabm = MABM FROM GIAOVIEN WHERE MAGV = @MAGV
		PRINT N'Mã giáo viên: ' + @MAGV + ' - ' + @hoten + ' - ' + @phai
		PRINT N'Lương: ' + CONVERT(char, @luong)
		PRINT N'Ngày sinh: ' + CONVERT(char, CONVERT(date, @ngsinh))
		PRINT N'Địa chỉ: ' + @diachi
		PRINT N'Giáo viên quản lý chuyên môn: ' + @gvqlcm
		PRINT N'Mã bộ môn: ' + @mabm
		PRINT N'Số đề tài mà giáo viên ' + @MAGV + N' tham gia là: ' + CONVERT(char, dbo.P2_TINH_SODT(@MAGV))
		PRINT N'Số người thân của giáo viên ' + @MAGV + N' là: ' + CONVERT(char, dbo.P3_SO_THANNHAN(@MAGV))
	END
GO

-- P4
CREATE PROCEDURE P4_KTR_GV_TONTAI @HOTEN nvarchar(40), @NGSINH datetime, @DIACHI nvarchar(40)
AS
	IF(dbo.P4_TONTAI_GV(@hoten,@ngsinh,@diachi) = 1)
		PRINT N'Tồn tại giáo viên ' + @hoten
	ELSE
		PRINT N'Không tồn tại giáo viên này'
GO

-- P5
CREATE PROCEDURE P5_KTR_GV_TGDT @MAGV char(3)
AS
	IF(EXISTS(SELECT MAGV FROM GIAOVIEN WHERE MAGV = @MAGV))
		IF(dbo.P2_TINH_SODT(@MAGV) != 0)
			IF(dbo.P5_KTR_GV_THAMGIADT(@MAGV) = 1)
				PRINT N'Giáo viên ' + @MAGV + N' tham gia đúng đề tài của bộ môn của mình'
			ELSE
				PRINT N'Giáo viên ' + @MAGV + N' không tham gia đúng đề tài của bộ môn của mình'
		ELSE
			PRINT N'Giáo viên ' + @MAGV + N' không tham gia đề tài nào'
	ELSE
		PRINT N'Không có giáo viên ' + @MAGV
GO

-- P6
CREATE PROCEDURE P6_KTR_GV_TGCV @MAGV char(3)
AS
	SELECT MAGV, MADT, STT, KIEM_TRA = dbo.P6_KTR_GV_THAMGIACV(@MAGV, MADT, STT)
	FROM THAMGIADT
	WHERE MAGV = @MAGV
	GROUP BY MADT
	HAVING COUNT(STT) = 1
GO

-- P7
CREATE PROCEDURE P7_XOA_GV @MAGV char(3)
AS
	IF(dbo.TINH_SODT(@MAGV) = 0)
		IF(dbo.SO_THANNHAN(@MAGV) = 0)
			IF(@MAGV NOT IN (SELECT DISTINCT GVCNDT FROM DETAI))
				IF(NOT EXISTS(SELECT TRUONGBM FROM BOMON WHERE TRUONGBM = @MAGV))
					IF(NOT EXISTS(SELECT TRUONGKHOA FROM KHOA WHERE TRUONGKHOA = @MAGV))
						DELETE FROM GIAOVIEN WHERE MAGV = @MAGV
					ELSE
						PRINT N'Không thể xóa vì giáo viên là trưởng khoa'
				ELSE
					PRINT N'Không thể xóa vì giáo viên là trưởng bộ môn'
			ELSE
				PRINT N'Không thể xóa vì giáo viên có chủ nhiệm đề tài'
		ELSE
			PRINT N'Không thể xóa vì giáo viên có thân nhân'
	ELSE
		PRINT N'Không thể xóa vì giáo viên có tham gia đề tài'
GO

-- P8
CREATE PROCEDURE P8_DS_INFO_GV @PHONG char(3)
AS
	SELECT GV.MAGV, HOTEN, PHAI, GV.MABM,
	SO_DT = dbo.P2_TINH_SODT(GV.MAGV), SO_THANNHAN = dbo.P3_SO_THANNHAN(GV.MAGV), SO_GV_QL = CASE
																							WHEN (EXISTS(SELECT DISTINCT GVQLCM FROM GIAOVIEN WHERE GVQLCM = GV.MAGV))
																							THEN (SELECT COUNT(*) FROM GIAOVIEN QL WHERE QL.GVQLCM = GV.MAGV)
																							ELSE 0
																							 END
	FROM GIAOVIEN GV LEFT JOIN BOMON ON GV.MABM = BOMON.MABM LEFT JOIN KHOA ON BOMON.MAKHOA = KHOA.MAKHOA
	WHERE KHOA.PHONG = @PHONG
GO

DROP PROCEDURE P8_DS_INFO_GV

-- P9
CREATE PROCEDURE P9_KTR_LUONG_TRUONGBM @MAGVA char(3), @MAGVB char(3)
AS
	IF(@MAGVA = (SELECT TRUONGBM FROM GIAOVIEN LEFT JOIN BOMON ON GIAOVIEN.MABM = BOMON.MABM AND GIAOVIEN.MAGV = @MAGVB))
	BEGIN
		DECLARE @luongA int
		DECLARE @luongB int
		SELECT @luongA = LUONG FROM GIAOVIEN WHERE MAGV = @MAGVA
		SELECT @luongB = LUONG FROM GIAOVIEN WHERE MAGV = @MAGVB
		IF(@luongA > @luongB)
			PRINT N'Giáo viên ' + @MAGVA + N' có lương cao hơn và là trưởng bộ môn của giáo viên ' + @MAGVB
		ELSE
			PRINT N'Giáo viên ' + @MAGVA + N' có lương thấp hơn và là trưởng bộ môn của giáo viên ' + @MAGVB
	END
	ELSE
		PRINT N'Giáo viên ' + @MAGVA + N' không phải trưởng bộ môn của giáo viên ' + @MAGVB
GO

-- P11
CREATE PROCEDURE P11_THEM_GV @HOTEN nvarchar(40), @LUONG int, @PHAI nchar(3), @NGSINH datetime, @DIACHI nvarchar(40), @GVQLCM char(3), @MABM nchar(4)
AS
	IF(dbo.P10_KTR_GV_MOI(@HOTEN, @NGSINH, @LUONG) = 1)
	BEGIN
		DECLARE @i int = 1
		WHILE(REPLACE(STR(@i, 3,0), ' ', '0') IN (SELECT MAGV FROM GIAOVIEN))
			SET @i = @i + 1
		INSERT INTO GIAOVIEN VALUES(REPLACE(STR(@i,3,0), ' ', '0'),@HOTEN, @LUONG, @PHAI, @NGSINH, @DIACHI, @GVQLCM, @MABM)
	END
GO

-------------------------------------------------------------- Bai tap --------------------------------------------------------------
-- P1 Xuat ra toan bo giao vien
EXEC P1_XUAT_DS_GV

-- P2 Tinh so luong de tai ma mot giao vien dang thuc hien
EXEC P2_SO_DT '001'
EXEC P2_SO_DT '002'

-- P3 In thong tin chi tiet cua mot giao vien(dung lenh print):
-- Thong tin ca nhan, So luong de tai tham gia, So luong than nhan cua giao vien do
EXEC P3_INFO_GV '002'

-- P4 Kiem tra xem mot giao vien co ton tai hay khong(dua vao HOTEN, NGSINH, DIACHI)
EXEC P4_KTR_GV_TONTAI N'Trần Trà Hương', '1960-06-20 00:00:00.000', N'125 Trần Hưng Đạo, Q.1, TP HCM'

-- P5 Kiem tra quy dinh cua mot giao vien: chi duoc thuc hien cac de tai ma bo mon cua giao vien do lam chu nhiem
EXEC P5_KTR_GV_TGDT '009'

-- P6 Thuc hien them mot phan cong cho giao vien thuc hien mot cong viec cua de tai:
-- + Kiem tra thong tin dau vao hop le: giao vien phai ton tai, cong viec phai ton tai, thoi gian tham gia phai >0
-- + Giao vien tham gia de tai cung bo mon voi giao vien lam chu nhiem de tai do
EXEC P6_KTR_GV_TGCV '001'
EXEC P6_KTR_GV_TGCV '002'

-- P7 Thuc hien xoa mot giao vien theo ma. Neu giao vien do co thong tin lien quan (co than nhan, co lam de tai...) thi bao loi
EXEC P7_XOA_GV '301'

-- P8 In ra danh sach giao vien cua mot phong ban nao do cung voi so luong de tai ma giao vien do tham gia, so than nhan, so giao vien ma giao vien do quan ly neu co
EXEC P8_DS_INFO_GV 'B11'
EXEC P8_DS_INFO_GV 'B21'
EXEC P8_DS_INFO_GV 'B31'
EXEC P8_DS_INFO_GV 'B41'

-- P9 Kiem tra quy dinh cua 2 giao vien a, b: neu a la truong bo mon cua b thi luong cua a phai cao hon luong cua b (a,b: ma giao vien)
EXEC P9_KTR_LUONG_TRUONGBM '001', '002'

-- P10 Khi them mot giao vien can kiem tra cac quy dinh: khong trung ten, tuoi > 18, luong > 0
IF(dbo.P10_KTR_GV_MOI(N'Lê Minh Tâm', '1990-12-03', 1800) = 1)
	PRINT N'Có thể thêm giáo viên mới'
ELSE
	PRINT N'Không thể thêm giáo viên mới'

-- P11 Ma giao vien duoc phat sinh tu dong theo quy tac: neu da co giao vien 001, 002, 003 thi MAGV cua giao vien moi la 004
-- Neu da co giao vien 001, 002, 005 thi MAGV cua giao vien moi la 003
EXEC THEM_GV N'Lê Minh Sơn', 2000, 'Nam', '1997-10-03', N'123/7, Trần Hưng Đạo', '002', 'HTTT'

-------------------------------------------------------------- BTVN --------------------------------------------------------------
CREATE TABLE PHONG(
	MAPHONG char(3),
	TINHTRANG nchar(4),
	LOAIPH nvarchar(7),
	DONGIA int,
	PRIMARY KEY (MAPHONG)
)

ALTER TABLE PHONG
	ADD CONSTRAINT C_TINHTRANG
	CHECK (TINHTRANG IN (N'Rãnh', N'Bận'))

CREATE TABLE KHACH(
	MAKH char(3),
	HOTEN nvarchar(40),
	DIACHI nvarchar(40),
	DIENTHOAI char(10),
	PRIMARY KEY(MAKH)
)
CREATE TABLE DATPHONG(
	MADP int,
	MAKH char(3),
	MAPHONG char(3),
	NGAYDAT date,
	NGAYTRA date,
	THANHTIEN int,
	PRIMARY KEY (MADP),
	FOREIGN KEY (MAKH) REFERENCES KHACH(MAKH),
	FOREIGN KEY (MAPHONG) REFERENCES PHONG(MAPHONG)
)

CREATE PROCEDURE spDatPhong @makh char(3), @maphong char(3), @ngaydat date
AS
BEGIN
	IF(@makh IN (SELECT MAKH FROM KHACH) AND @maphong IN (SELECT MAPHONG FROM PHONG WHERE TINHTRANG = N'Rãnh'))
	BEGIN
		DECLARE @MADP int

		IF(NOT EXISTS(SELECT MADP FROM DATPHONG WHERE MADP = 1))
			SET @MADP = 1
		ELSE
			SET @MADP = (SELECT MAX(MADP) FROM DATPHONG) + 1

		INSERT INTO DATPHONG VALUES(@MADP, @makh, @maphong, @ngaydat, NULL, NULL)
		UPDATE PHONG SET TINHTRANG = N'Bận' WHERE MAPHONG = @maphong
	END
END
GO
/*
Hàm spDatPhong sẽ kiểm tra xem mã khách hàng có tồn tại trong bảng KHACH và mã phòng có tồn tại trong danh sách các phòng rãnh hay không.
Nếu các điều kiện trên thỏa, hàm sẽ tạo một biến số nguyên @MADP để xác định mã đặt phòng tiếp theo sẽ được thêm vào bảng DATPHONG.
Nếu DATPHONG chưa có MADP 1 (chưa có khách nào đặt phòng), @MADP sẽ được gán bằng 1, ngược lại thì sẽ được gán bằng MADP lớn nhất + 1
Cuối cùng thông tin đặt phòng của khách sẽ được lưu vào bảng DATPHONG và tình trạng phòng sẽ được cập nhật là 'Bận' trong bảng PHONG
*/

CREATE PROCEDURE spTraPhong @madp char(3), @makh char(3)
AS
BEGIN
	IF(@makh = (SELECT MAKH FROM DATPHONG WHERE MADP = @madp))
	BEGIN
		DECLARE @MAPHONG char(3)
		DECLARE @DONGIA int
		SELECT @DONGIA = DONGIA, @MAPHONG = PHONG.MAPHONG FROM DATPHONG JOIN PHONG ON MADP = @madp AND DATPHONG.MAPHONG = PHONG.MAPHONG

		UPDATE DATPHONG SET NGAYTRA = CONVERT(date, CURRENT_TIMESTAMP), THANHTIEN = datediff(d, NGAYDAT, CURRENT_TIMESTAMP) * @DONGIA WHERE MADP = @madp
		UPDATE PHONG SET TINHTRANG = N'Rãnh' WHERE MAPHONG = @MAPHONG
	END
END
GO
/*
Hàm spTraPhong sẽ kiểm tra xem mã khách hàng có giống với mã khách hàng của mã đặt phòng tương ứng trong bảng DATPHONG.
Nếu điều kiện trên thỏa, hàm sẽ tạo ra 2 biến @MAPHONG lưu mã phòng và @DONGIA lưu đơn giá của phòng.
Cuối cùng hàm sẽ cập nhật lại trong bảng DATPHONG thuộc tính NGAYTRA thành ngày hiện tại và THANHTIEN bằng số ngày ở nhân đơn giá phòng
và cập nhật TINHTRANG trong bảng PHONG thành 'Rãnh'
*/

-------------------------------------------------------BUỔI 9------------------------------------------------------------
-- T1. Ten de tai phai duy nhat
CREATE TRIGGER TENDT_DUY_NHAT
ON DETAI
FOR insert, update
AS
IF update(TENDT)
BEGIN
	IF(EXISTS(SELECT TENDT 
			  FROM DETAI --Đã tính luôn cập nhật
			  WHERE TENDT IN (SELECT TENDT FROM inserted) 
			  GROUP BY TENDT 
			  HAVING COUNT(MADT) > 1))
	BEGIN
		raiserror(N'Lỗi: Hai đề tài khác nhau không được trùng tên',16,1)
		rollback
	END
END

UPDATE DETAI SET TENDT = N'Ứng dụng hóa học xanh' WHERE MADT = '001'

DROP TRIGGER TENDT_DUY_NHAT

-- T2. Truong bo mon phai sinh truoc nam 1975
CREATE TRIGGER TRBM_SINH_TRUOC_1975
ON BOMON
FOR insert, update 
AS
IF update(TRUONGBM)
BEGIN
	IF(EXISTS(SELECT TRUONGBM FROM inserted, GIAOVIEN WHERE TRUONGBM = MAGV AND YEAR(NGSINH) >= 1975))
	BEGIN
		raiserror(N'Lỗi: Trưởng bộ môn phai sinh trước năm 1975',16,1)
		rollback
	END
END

UPDATE BOMON SET TRUONGBM = '009' WHERE MABM = 'MMT'

DROP TRIGGER TRBM_SINH_TRUOC_1975

-- T3. Mot bo mon co toi thieu mot giao vien nu
CREATE TRIGGER BM_CO_GV_NU
ON GIAOVIEN
FOR delete --update
AS
BEGIN
	IF(EXISTS(SELECT MABM
			  FROM GIAOVIEN --Đã cập nhật (Đã bị xóa)
			  WHERE MABM IN (SELECT MABM FROM deleted) AND PHAI = N'Nữ'
			  GROUP BY MABM
			  HAVING COUNT(MAGV) = 0))
	BEGIN
		raiserror(N'Lỗi: Mỗi bộ môn phải có tối thiểu 1 giáo viên nữ',16,1)
		rollback
	END
END

DELETE FROM GIAOVIEN WHERE MAGV = '006'

DROP TRIGGER BM_CO_GV_NU

-- T4. Mot giao vien phai co it nhat mot so dien thoai
CREATE TRIGGER GV_PHAI_CO_SDT
ON GV_DT
FOR delete AS
BEGIN
	IF(EXISTS(SELECT MAGV FROM deleted WHERE MAGV NOT IN (SELECT MAGV FROM GV_DT)))
	BEGIN
		raiserror(N'Lỗi: mỗi giáo viên phải có ít nhất một số điện thoại',16,1)
		rollback
	END
END

DELETE FROM GV_DT WHERE MAGV = '002'

DROP TRIGGER GV_PHAI_CO_SDT

-- T5. Mot giao vien co toi da 3 so dien thoai
CREATE TRIGGER GV_CO_TOI_DA_3_SDT
ON GV_DT
FOR insert, update 
AS
IF update(MAGV)
BEGIN
	IF(EXISTS(SELECT MAGV FROM GV_DT WHERE MAGV IN (SELECT MAGV FROM inserted) GROUP BY MAGV HAVING COUNT(DIENTHOAI) > 3))
	BEGIN
		raiserror(N'Lỗi: mỗi giáo viên chỉ có tối đa 3 số điện thoại',16,1)
		rollback
	END
END

INSERT INTO GV_DT VALUES('003','0924123456')

-- T6. Mot bo mon phai co toi thieu 4 giao vien
CREATE TRIGGER GV_TOI_THIEU_CUA_BM
ON GIAOVIEN
FOR delete AS
BEGIN
	IF(EXISTS(SELECT BM.MABM
			  FROM BOMON BM, GIAOVIEN
			  WHERE BM.MABM IN (SELECT MABM FROM deleted) AND GIAOVIEN.MABM = BM.MABM
			  GROUP BY BM.MABM
			  HAVING COUNT(MAGV) < 4))
	BEGIN
		raiserror(N'Lỗi: Mỗi bộ môn phải có tối thiểu 4 giáo viên',16,1)
		rollback
	END
END

DELETE FROM GIAOVIEN WHERE MABM = 'VS'

DROP TRIGGER GV_TOI_THIEU_CUA_BM

-- T7. Truong bo mon phai la nguoi lon tuoi nhat trong bo mon
CREATE TRIGGER TRBM_LON_TUOI_NHAT
ON BOMON
FOR insert, update AS
IF update(TRUONGBM)
BEGIN
	IF(EXISTS(SELECT TRUONGBM FROM inserted, GIAOVIEN GV
			  WHERE TRUONGBM = MAGV AND NGSINH > ANY(SELECT NGSINH FROM GIAOVIEN GV1 WHERE GV1.MABM = GV.MABM)))
	BEGIN
		raiserror(N'Lỗi: Trưởng bộ môn phải là người lớn tuổi nhất trong bộ môn',16,1)
		rollback
	END
END

UPDATE BOMON SET TRUONGBM = '008' WHERE MABM = 'HPT'

DROP TRIGGER TRBM_LON_TUOI_NHAT

-- T8. Neu mot giao vien da la truong bo mon thi giao vien do khong lam nguoi quan ly chuyen mon
CREATE TRIGGER TRBM_KHONG_LA_QLCM
ON GIAOVIEN
FOR insert, update AS
IF update(GVQLCM)
BEGIN
	IF(EXISTS(SELECT GVQLCM FROM inserted WHERE GVQLCM IN (SELECT TRUONGBM FROM BOMON)))
	BEGIN
		raiserror(N'Lỗi: Giáo viên đã là trưởng bộ môn thì không làm người quản lý chuyên môn',16,1)
		rollback
	END
END

UPDATE GIAOVIEN SET GVQLCM = '002' WHERE MAGV = '002'

DROP TRIGGER TRBM_KHONG_LA_QLCM

-- T9. Giao vien va giao vien quan ly chuyen mon cua giao vien do phai thuoc ve 1 bo mon
CREATE TRIGGER GV_CUNG_BM_GVQLCM
ON GIAOVIEN
FOR insert, update AS
IF update(MABM)
BEGIN
	IF(EXISTS(SELECT GV.MAGV, QL.MAGV
			  FROM inserted GV, GIAOVIEN QL
			  WHERE GV.MAGV != QL.MAGV AND GV.GVQLCM = QL.MAGV AND GV.MABM != QL.MABM))
	BEGIN
		raiserror(N'Lỗi: Giáo viên và giáo viên quản lý chuyên môn của giáo viên đó phải cùng bộ môn',16,1)
		rollback
	END
END

UPDATE GIAOVIEN SET MABM = 'VS' WHERE MAGV = '003'

DROP TRIGGER GV_CUNG_BM_GVQLCM



-- T13. Mot giao vien chi lam chu nhiem toi da 3 de tai
CREATE TRIGGER CN_TOI_DA_3_DT
ON DETAI
FOR insert, update AS
IF update(GVCNDT)
BEGIN
	IF(EXISTS(SELECT GVCNDT FROM DETAI WHERE GVCNDT IN (SELECT GVCNDT FROM inserted) GROUP BY GVCNDT HAVING COUNT(MADT) > 3))
	BEGIN
		raiserror(N'Lỗi: Một giáo viên chỉ làm chủ nhiệm tối đa 3 đề tài',16,1)
		rollback
	END
END

UPDATE DETAI SET GVCNDT = '002' WHERE GVCNDT = '004'

-- T14. Mot de tai phai co it nhat mot cong viec
CREATE TRIGGER DT_CO_IT_NHAT_1_CV
ON CONGVIEC
FOR delete AS
BEGIN
	IF(EXISTS(SELECT MADT FROM deleted WHERE MADT NOT IN (SELECT MADT FROM CONGVIEC)))
	BEGIN
		raiserror(N'Lỗi: Một đề tài phải có ít nhất 1 công việc',16,1)
		rollback
	END
END

DELETE FROM CONGVIEC WHERE MADT = '006'

-- T15. Luong cua giao vien phai nho hon luong cua nguoi quan ly giao vien do
CREATE TRIGGER LUONG_GV_NHO_HON_GVQLCM
ON GIAOVIEN
FOR insert, update AS
IF update(LUONG)
BEGIN
	IF(EXISTS(SELECT GV.MAGV
			  FROM inserted GV, GIAOVIEN QL
			  WHERE GV.MAGV != QL.MAGV AND GV.GVQLCM = QL.MAGV AND GV.LUONG >= QL.LUONG))
	BEGIN
		raiserror(N'Lỗi: Lương của giáo viên phải nhỏ hơn lương của người quản lý giáo viên đó',16,1)
		rollback
	END
END

UPDATE GIAOVIEN SET LUONG = 2600 WHERE MAGV = '003'

DROP TRIGGER LUONG_GV_NHO_HON_GVQLCM

-- T16. Luong cua truong bo mon phai lon hon luong cua cac giao vien trong bo mon
CREATE TRIGGER LUONG_TRBM_LON_NHAT_BM
ON GIAOVIEN
FOR insert, update AS
IF update(LUONG)
BEGIN
	IF(EXISTS(SELECT *
			  FROM BOMON BM, GIAOVIEN TRBM
			  WHERE BM.MABM IN (SELECT MABM FROM inserted) AND BM.TRUONGBM = TRBM.MAGV AND LUONG < ANY(SELECT LUONG FROM GIAOVIEN WHERE MABM = TRBM.MAGV AND MAGV != BM.TRUONGBM)))
	BEGIN
		raiserror(N'Lỗi: Lương của trưởng bộ môn phải lớn hơn lương của các giáo viên khác trong bộ môn',16,1)
		rollback
	END
END

UPDATE GIAOVIEN SET LUONG = 2600 WHERE MAGV = '003'

DROP TRIGGER LUONG_TRBM_LON_NHAT_BM

-- T17. Bo mon ban nao cung phai co truong bo mon va truong bo mon phai la mot giao vien trong truong
CREATE TRIGGER BM_PHAI_CO_TRBM_LA_GV_TRONG_TRUONG
ON BOMON
FOR insert, update AS
IF update(TRUONGBM)
BEGIN
	IF(EXISTS(SELECT TRUONGBM
			  FROM inserted
			  WHERE TRUONGBM IS NULL OR TRUONGBM NOT IN (SELECT MAGV FROM GIAOVIEN)))
	BEGIN
		raiserror(N'Lỗi: Bộ môn nào cũng phải có trưởng bộ môn là giáo viên trong trường',16,1)
		rollback
	END
END

UPDATE BOMON SET TRUONGBM = '011' WHERE MABM = 'CNTT'

-- T18. Mot giao vien chi quan ly toi da 3 giao vien khac
CREATE TRIGGER GVQL_TOI_DA_3_GV
ON GIAOVIEN
FOR insert, update AS
IF update(GVQLCM)
BEGIN
	IF(EXISTS(SELECT GVQLCM FROM GIAOVIEN WHERE GVQLCM IN (SELECT GVQLCM FROM inserted) GROUP BY GVQLCM HAVING COUNT(MAGV) > 3))
	BEGIN
		raiserror(N'Lỗi: Một giáo viên chỉ quản lý tối đa 3 giáo viên khác',16,1)
		rollback
	END
END

UPDATE GIAOVIEN SET GVQLCM = '007' WHERE MAGV = '005' OR MAGV = '007'

-- T19. Giao vien chi tham gia de tai ma giao vien chu nhiem de tai la nguoi cung bo mon voi giao vien do
CREATE TRIGGER GV_TGDT_CO_GVCNDT_CUNG_BM
ON THAMGIADT
FOR insert, update AS
IF update(MADT)
BEGIN
	IF(EXISTS(SELECT GV.MAGV
			  FROM GIAOVIEN GV, inserted TGDT, DETAI, GIAOVIEN CNDT
			  WHERE GV.MAGV = TGDT.MAGV AND TGDT.MADT = DETAI.MADT AND DETAI.GVCNDT = CNDT.MAGV AND GV.MABM != CNDT.MABM))
	BEGIN
		raiserror(N'Lỗi: Giáo viên chỉ tham gia đề tài mà giáo viên chủ nhiệm đề tài là người cùng bộ môn với giáo viên đó',16,1)
		rollback
	END
END

INSERT INTO THAMGIADT VALUES ('001','001',1,0,NULL)

DELETE FROM THAMGIADT WHERE MAGV = '001' AND MADT = '001'
